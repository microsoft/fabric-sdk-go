// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package mlmodel_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"

	"github.com/microsoft/fabric-sdk-go/fabric/mlmodel"
)

// Generated from example definition
func ExampleEndpointClient_GetMLModelEndpoint() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := mlmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewEndpointClient().GetMLModelEndpoint(ctx, "cf5fef71-f7f3-43f3-ae7f-3c427922bef1", "7e92a6fc-3ef5-40bf-96df-ddae3fcde313", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.Endpoint = mlmodel.Endpoint{
	// 	DefaultVersionAssignmentBehavior: to.Ptr(mlmodel.EndpointDefaultVersionConfigurationPolicyStaticallyConfigured),
	// 	DefaultVersionInfo: &mlmodel.EndpointVersionInfo{
	// 		InputSignature: []mlmodel.DataSchema{
	// 			{
	// 				Name: to.Ptr("age"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("sex"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("bmi"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("bp"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s1"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s2"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s3"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s4"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s5"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s6"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 		}},
	// 		OutputSignature: []mlmodel.DataSchema{
	// 			{
	// 				Name: to.Ptr("target"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 		}},
	// 		ScaleRule: to.Ptr(mlmodel.ScaleRuleAlwaysOn),
	// 		Status: to.Ptr(mlmodel.ModelEndpointVersionStatus("Running")),
	// 		VersionName: to.Ptr("1"),
	// 	},
	// 	DefaultVersionName: to.Ptr("1"),
	// }
}

// Generated from example definition
func ExampleEndpointClient_UpdateMLModelEndpoint() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := mlmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewEndpointClient().UpdateMLModelEndpoint(ctx, "cf5fef71-f7f3-43f3-ae7f-3c427922bef1", "7e92a6fc-3ef5-40bf-96df-ddae3fcde313", mlmodel.UpdateMLModelEndpointRequest{
		DefaultVersionAssignmentBehavior: to.Ptr(mlmodel.EndpointDefaultVersionConfigurationPolicyStaticallyConfigured),
		DefaultVersionName:               to.Ptr("1"),
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.Endpoint = mlmodel.Endpoint{
	// 	DefaultVersionAssignmentBehavior: to.Ptr(mlmodel.EndpointDefaultVersionConfigurationPolicyStaticallyConfigured),
	// 	DefaultVersionInfo: &mlmodel.EndpointVersionInfo{
	// 		InputSignature: []mlmodel.DataSchema{
	// 			{
	// 				Name: to.Ptr("age"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("sex"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("bmi"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("bp"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s1"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s2"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s3"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s4"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s5"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 			},
	// 			{
	// 				Name: to.Ptr("s6"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 		}},
	// 		OutputSignature: []mlmodel.DataSchema{
	// 			{
	// 				Name: to.Ptr("target"),
	// 				Type: to.Ptr("double"),
	// 				Required: to.Ptr(true),
	// 		}},
	// 		ScaleRule: to.Ptr(mlmodel.ScaleRuleAlwaysOn),
	// 		Status: to.Ptr(mlmodel.ModelEndpointVersionStatus("Running")),
	// 		VersionName: to.Ptr("1"),
	// 	},
	// 	DefaultVersionName: to.Ptr("1"),
	// }
}

// Generated from example definition
func ExampleEndpointClient_BeginDeactivateAllMLModelEndpointVersions() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := mlmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewEndpointClient().BeginDeactivateAllMLModelEndpointVersions(ctx, "cf5fef71-f7f3-43f3-ae7f-3c427922bef1", "7e92a6fc-3ef5-40bf-96df-ddae3fcde313", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}

// Generated from example definition
func ExampleEndpointClient_NewListMLModelEndpointVersionsPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := mlmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	pager := clientFactory.NewEndpointClient().NewListMLModelEndpointVersionsPager("cf5fef71-f7f3-43f3-ae7f-3c427922bef1", "7e92a6fc-3ef5-40bf-96df-ddae3fcde313", &mlmodel.EndpointClientListMLModelEndpointVersionsOptions{ContinuationToken: nil})
	for pager.More() {
		page, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range page.Value {
			// You could use page here. We use blank identifier for just demo purposes.
			_ = v
		}
		// If the HTTP response code is 200 as defined in example definition, your page structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
		// page.EndpointVersions = mlmodel.EndpointVersions{
		// 	Value: []mlmodel.EndpointVersionInfo{
		// 		{
		// 			InputSignature: []mlmodel.DataSchema{
		// 				{
		// 					Name: to.Ptr("age"),
		// 					Type: to.Ptr("double"),
		// 					Required: to.Ptr(true),
		// 				},
		// 				{
		// 					Name: to.Ptr("sex"),
		// 					Type: to.Ptr("double"),
		// 					Required: to.Ptr(true),
		// 				},
		// 				{
		// 					Name: to.Ptr("bmi"),
		// 					Type: to.Ptr("double"),
		// 					Required: to.Ptr(true),
		// 				},
		// 				{
		// 					Name: to.Ptr("bp"),
		// 					Type: to.Ptr("double"),
		// 					Required: to.Ptr(true),
		// 				},
		// 				{
		// 					Name: to.Ptr("s1"),
		// 					Type: to.Ptr("double"),
		// 					Required: to.Ptr(true),
		// 				},
		// 				{
		// 					Name: to.Ptr("s2"),
		// 					Type: to.Ptr("double"),
		// 					Required: to.Ptr(true),
		// 				},
		// 				{
		// 					Name: to.Ptr("s3"),
		// 					Type: to.Ptr("double"),
		// 					Required: to.Ptr(true),
		// 				},
		// 				{
		// 					Name: to.Ptr("s4"),
		// 					Type: to.Ptr("double"),
		// 					Required: to.Ptr(true),
		// 				},
		// 				{
		// 					Name: to.Ptr("s5"),
		// 					Type: to.Ptr("double"),
		// 					Required: to.Ptr(true),
		// 				},
		// 				{
		// 					Name: to.Ptr("s6"),
		// 					Type: to.Ptr("double"),
		// 					Required: to.Ptr(true),
		// 			}},
		// 			OutputSignature: []mlmodel.DataSchema{
		// 				{
		// 					Name: to.Ptr("target"),
		// 					Type: to.Ptr("double"),
		// 					Required: to.Ptr(true),
		// 			}},
		// 			ScaleRule: to.Ptr(mlmodel.ScaleRuleAlwaysOn),
		// 			Status: to.Ptr(mlmodel.ModelEndpointVersionStatusActive),
		// 			VersionName: to.Ptr("1"),
		// 		},
		// 		{
		// 			Status: to.Ptr(mlmodel.ModelEndpointVersionStatusDeactivated),
		// 			VersionName: to.Ptr("2"),
		// 	}},
		// }
	}
}

// Generated from example definition
func ExampleEndpointClient_GetMLModelEndpointVersion() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := mlmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewEndpointClient().GetMLModelEndpointVersion(ctx, "cf5fef71-f7f3-43f3-ae7f-3c427922bef1", "7e92a6fc-3ef5-40bf-96df-ddae3fcde313", "1", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.EndpointVersionInfo = mlmodel.EndpointVersionInfo{
	// 	InputSignature: []mlmodel.DataSchema{
	// 		{
	// 			Name: to.Ptr("age"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("sex"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("bmi"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("bp"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s1"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s2"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s3"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s4"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s5"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s6"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 	}},
	// 	OutputSignature: []mlmodel.DataSchema{
	// 		{
	// 			Name: to.Ptr("target"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 	}},
	// 	ScaleRule: to.Ptr(mlmodel.ScaleRuleAlwaysOn),
	// 	Status: to.Ptr(mlmodel.ModelEndpointVersionStatus("Running")),
	// 	VersionName: to.Ptr("1"),
	// }
}

// Generated from example definition
func ExampleEndpointClient_UpdateMLModelEndpointVersion() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := mlmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewEndpointClient().UpdateMLModelEndpointVersion(ctx, "cf5fef71-f7f3-43f3-ae7f-3c427922bef1", "7e92a6fc-3ef5-40bf-96df-ddae3fcde313", "1", mlmodel.UpdateMLModelEndpointVersionRequest{
		ScaleRule: to.Ptr(mlmodel.ScaleRuleAllowScaleToZero),
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.EndpointVersionInfo = mlmodel.EndpointVersionInfo{
	// 	InputSignature: []mlmodel.DataSchema{
	// 		{
	// 			Name: to.Ptr("age"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("sex"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("bmi"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("bp"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s1"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s2"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s3"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s4"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s5"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 		},
	// 		{
	// 			Name: to.Ptr("s6"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 	}},
	// 	OutputSignature: []mlmodel.DataSchema{
	// 		{
	// 			Name: to.Ptr("target"),
	// 			Type: to.Ptr("double"),
	// 			Required: to.Ptr(true),
	// 	}},
	// 	ScaleRule: to.Ptr(mlmodel.ScaleRuleAllowScaleToZero),
	// 	Status: to.Ptr(mlmodel.ModelEndpointVersionStatus("Running")),
	// 	VersionName: to.Ptr("1"),
	// }
}

// Generated from example definition
func ExampleEndpointClient_BeginActivateMLModelEndpointVersion() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := mlmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewEndpointClient().BeginActivateMLModelEndpointVersion(ctx, "cf5fef71-f7f3-43f3-ae7f-3c427922bef1", "7e92a6fc-3ef5-40bf-96df-ddae3fcde313", "1", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}

// Generated from example definition
func ExampleEndpointClient_BeginDeactivateMLModelEndpointVersion() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := mlmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewEndpointClient().BeginDeactivateMLModelEndpointVersion(ctx, "cf5fef71-f7f3-43f3-ae7f-3c427922bef1", "7e92a6fc-3ef5-40bf-96df-ddae3fcde313", "1", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}

// Generated from example definition
func ExampleEndpointClient_BeginScoreMLModelEndpoint() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := mlmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewEndpointClient().BeginScoreMLModelEndpoint(ctx, "cf5fef71-f7f3-43f3-ae7f-3c427922bef1", "7e92a6fc-3ef5-40bf-96df-ddae3fcde313", mlmodel.ScoreDataRequest{
		FormatType: to.Ptr(mlmodel.FormatTypeDataframe),
		Inputs: [][]any{
			[]any{
				float64(-0.00188201652779),
				float64(-0.04464163650698),
				float64(-0.0514740612388),
				float64(-0.0263275281478529),
				float64(-0.00844872411121),
				float64(-0.01916333974822),
				float64(0.07441156407875721),
				float64(-0.03949338287409329),
				float64(-0.0683315470939731),
				float64(-0.092204049626824)},
			[]any{
				float64(1),
				float64(2),
				float64(3),
				float64(4),
				float64(5),
				float64(6),
				float64(7),
				float64(8),
				float64(9),
				float64(0)},
			[]any{
				float64(11),
				float64(2),
				float64(3),
				float64(4),
				float64(5),
				float64(6),
				float64(77),
				float64(8),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(22),
				float64(3),
				float64(47),
				float64(5),
				float64(6),
				float64(7),
				float64(0),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(2),
				float64(3),
				float64(4),
				float64(5),
				float64(6),
				float64(7),
				float64(8),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(2),
				float64(3),
				float64(4),
				float64(5),
				float64(86),
				float64(7),
				float64(8),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(25),
				float64(3),
				float64(4),
				float64(5),
				float64(6),
				float64(7),
				float64(98),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(2),
				float64(3),
				float64(4),
				float64(5),
				float64(6),
				float64(7),
				float64(8),
				float64(99),
				float64(0)},
			[]any{
				float64(1),
				float64(205),
				float64(3),
				float64(4),
				float64(5),
				float64(96),
				float64(7),
				float64(8),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(2),
				float64(35),
				float64(4),
				float64(5),
				float64(6),
				float64(7),
				float64(18),
				float64(19),
				float64(0)}},
		Orientation: to.Ptr(mlmodel.OrientationValues),
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	res, err := poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.ScoreDataResponse = mlmodel.ScoreDataResponse{
	// 	FormatType: to.Ptr(mlmodel.FormatTypeDataframe),
	// 	Orientation: to.Ptr(mlmodel.OrientationValues),
	// 	Predictions: [][]any{
	// 		[]any{
	// 			float64(72)},
	// 			[]any{
	// 				float64(248)},
	// 				[]any{
	// 					float64(87)},
	// 					[]any{
	// 						float64(217)},
	// 						[]any{
	// 							float64(248)},
	// 							[]any{
	// 								float64(84)},
	// 								[]any{
	// 									float64(248)},
	// 									[]any{
	// 										float64(220)},
	// 										[]any{
	// 											float64(139)},
	// 											[]any{
	// 												float64(242)}},
	// 											}
}

// Generated from example definition
func ExampleEndpointClient_BeginScoreMLModelEndpointVersion() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := mlmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewEndpointClient().BeginScoreMLModelEndpointVersion(ctx, "cf5fef71-f7f3-43f3-ae7f-3c427922bef1", "7e92a6fc-3ef5-40bf-96df-ddae3fcde313", "1", mlmodel.ScoreDataRequest{
		FormatType: to.Ptr(mlmodel.FormatTypeDataframe),
		Inputs: [][]any{
			[]any{
				float64(-0.00188201652779),
				float64(-0.04464163650698),
				float64(-0.0514740612388),
				float64(-0.0263275281478529),
				float64(-0.00844872411121),
				float64(-0.01916333974822),
				float64(0.07441156407875721),
				float64(-0.03949338287409329),
				float64(-0.0683315470939731),
				float64(-0.092204049626824)},
			[]any{
				float64(1),
				float64(2),
				float64(3),
				float64(4),
				float64(5),
				float64(6),
				float64(7),
				float64(8),
				float64(9),
				float64(0)},
			[]any{
				float64(11),
				float64(2),
				float64(3),
				float64(4),
				float64(5),
				float64(6),
				float64(77),
				float64(8),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(22),
				float64(3),
				float64(47),
				float64(5),
				float64(6),
				float64(7),
				float64(0),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(2),
				float64(3),
				float64(4),
				float64(5),
				float64(6),
				float64(7),
				float64(8),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(2),
				float64(3),
				float64(4),
				float64(5),
				float64(86),
				float64(7),
				float64(8),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(25),
				float64(3),
				float64(4),
				float64(5),
				float64(6),
				float64(7),
				float64(98),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(2),
				float64(3),
				float64(4),
				float64(5),
				float64(6),
				float64(7),
				float64(8),
				float64(99),
				float64(0)},
			[]any{
				float64(1),
				float64(205),
				float64(3),
				float64(4),
				float64(5),
				float64(96),
				float64(7),
				float64(8),
				float64(9),
				float64(0)},
			[]any{
				float64(1),
				float64(2),
				float64(35),
				float64(4),
				float64(5),
				float64(6),
				float64(7),
				float64(18),
				float64(19),
				float64(0)}},
		Orientation: to.Ptr(mlmodel.OrientationValues),
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	res, err := poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.ScoreDataResponse = mlmodel.ScoreDataResponse{
	// 	FormatType: to.Ptr(mlmodel.FormatTypeDataframe),
	// 	Orientation: to.Ptr(mlmodel.OrientationValues),
	// 	Predictions: [][]any{
	// 		[]any{
	// 			float64(72)},
	// 			[]any{
	// 				float64(248)},
	// 				[]any{
	// 					float64(87)},
	// 					[]any{
	// 						float64(217)},
	// 						[]any{
	// 							float64(248)},
	// 							[]any{
	// 								float64(84)},
	// 								[]any{
	// 									float64(248)},
	// 									[]any{
	// 										float64(220)},
	// 										[]any{
	// 											float64(139)},
	// 											[]any{
	// 												float64(242)}},
	// 											}
}
