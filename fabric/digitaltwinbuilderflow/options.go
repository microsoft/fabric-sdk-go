// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package digitaltwinbuilderflow

// ItemsClientBeginCreateDigitalTwinBuilderFlowOptions contains the optional parameters for the ItemsClient.BeginCreateDigitalTwinBuilderFlow
// method.
type ItemsClientBeginCreateDigitalTwinBuilderFlowOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// ItemsClientBeginGetDigitalTwinBuilderFlowDefinitionOptions contains the optional parameters for the ItemsClient.BeginGetDigitalTwinBuilderFlowDefinition
// method.
type ItemsClientBeginGetDigitalTwinBuilderFlowDefinitionOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// ItemsClientBeginUpdateDigitalTwinBuilderFlowDefinitionOptions contains the optional parameters for the ItemsClient.BeginUpdateDigitalTwinBuilderFlowDefinition
// method.
type ItemsClientBeginUpdateDigitalTwinBuilderFlowDefinitionOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string

	// When set to true and the Digital Twin Builder Flow.platform file is provided as part of the definition, the item's metadata
	// is updated using the metadata in the Digital Twin Builder Flow.platform file
	UpdateMetadata *bool
}

// ItemsClientDeleteDigitalTwinBuilderFlowOptions contains the optional parameters for the ItemsClient.DeleteDigitalTwinBuilderFlow
// method.
type ItemsClientDeleteDigitalTwinBuilderFlowOptions struct {
	// placeholder for future optional parameters
}

// ItemsClientGetDigitalTwinBuilderFlowOptions contains the optional parameters for the ItemsClient.GetDigitalTwinBuilderFlow
// method.
type ItemsClientGetDigitalTwinBuilderFlowOptions struct {
	// placeholder for future optional parameters
}

// ItemsClientListDigitalTwinBuilderFlowsOptions contains the optional parameters for the ItemsClient.NewListDigitalTwinBuilderFlowsPager
// method.
type ItemsClientListDigitalTwinBuilderFlowsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// ItemsClientUpdateDigitalTwinBuilderFlowOptions contains the optional parameters for the ItemsClient.UpdateDigitalTwinBuilderFlow
// method.
type ItemsClientUpdateDigitalTwinBuilderFlowOptions struct {
	// placeholder for future optional parameters
}
