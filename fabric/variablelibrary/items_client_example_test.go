// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package variablelibrary_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"

	"github.com/microsoft/fabric-sdk-go/fabric/variablelibrary"
)

// Generated from example definition
func ExampleItemsClient_NewListVariableLibrariesPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := variablelibrary.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	pager := clientFactory.NewItemsClient().NewListVariableLibrariesPager("cfafbeb1-8037-4d0c-896e-a46fb27ff229", &variablelibrary.ItemsClientListVariableLibrariesOptions{ContinuationToken: nil})
	for pager.More() {
		page, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range page.Value {
			// You could use page here. We use blank identifier for just demo purposes.
			_ = v
		}
		// If the HTTP response code is 200 as defined in example definition, your page structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
		// page.VariableLibraries = variablelibrary.VariableLibraries{
		// 	Value: []variablelibrary.VariableLibrary{
		// 		{
		// 			Type: to.Ptr(variablelibrary.ItemTypeVariableLibrary),
		// 			Description: to.Ptr("A VariableLibrary description."),
		// 			DisplayName: to.Ptr("VariableLibrary Name 1"),
		// 			ID: to.Ptr("3546052c-ae64-4526-b1a8-52af7761426f"),
		// 			WorkspaceID: to.Ptr("cfafbeb1-8037-4d0c-896e-a46fb27ff229"),
		// 			Properties: &variablelibrary.Properties{
		// 				ActiveValueSetName: to.Ptr("Default value set"),
		// 			},
		// 		},
		// 		{
		// 			Type: to.Ptr(variablelibrary.ItemTypeVariableLibrary),
		// 			Description: to.Ptr("A VariableLibrary description."),
		// 			DisplayName: to.Ptr("VariableLibrary Name 2"),
		// 			ID: to.Ptr("f697fb63-abd4-4399-9548-be7e3c3c0dac"),
		// 			WorkspaceID: to.Ptr("cfafbeb1-8037-4d0c-896e-a46fb27ff229"),
		// 			Properties: &variablelibrary.Properties{
		// 				ActiveValueSetName: to.Ptr("valueSet1"),
		// 			},
		// 	}},
		// }
	}
}

// Generated from example definition
func ExampleItemsClient_BeginCreateVariableLibrary_createAVariableLibraryExample() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := variablelibrary.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewItemsClient().BeginCreateVariableLibrary(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", variablelibrary.CreateVariableLibraryRequest{
		Description: to.Ptr("A VariableLibrary description."),
		DisplayName: to.Ptr("VariableLibrary 1"),
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}

// Generated from example definition
func ExampleItemsClient_BeginCreateVariableLibrary_createAVariableLibraryWithPublicDefinitionExample() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := variablelibrary.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewItemsClient().BeginCreateVariableLibrary(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", variablelibrary.CreateVariableLibraryRequest{
		Description: to.Ptr("A VariableLibrary description."),
		Definition: &variablelibrary.PublicDefinition{
			Format: to.Ptr("VariableLibraryV1"),
			Parts: []variablelibrary.PublicDefinitionPart{
				{
					Path:        to.Ptr("variables.json"),
					Payload:     to.Ptr("eyJleGVjdXRhYmxlRm..OWRmNDhhY2ZmZTgifQ=="),
					PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
				},
				{
					Path:        to.Ptr("valueSets/valueSet1.json"),
					Payload:     to.Ptr("eyJleGVjdXRhYmxlRm..OWRmNDhhY2ZmZTgifQ=="),
					PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
				},
				{
					Path:        to.Ptr("settings.json"),
					Payload:     to.Ptr("eyJleGVjdXRhYmxlRm..OWRmNDhhY2ZmZTgifQ=="),
					PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
				},
				{
					Path:        to.Ptr(".platform"),
					Payload:     to.Ptr("ZG90UGxhdGZvcm1CYXNlNjRTdHJpbmc="),
					PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
				}},
		},
		DisplayName: to.Ptr("VariableLibrary 1"),
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}

// Generated from example definition
func ExampleItemsClient_GetVariableLibrary() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := variablelibrary.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewItemsClient().GetVariableLibrary(ctx, "f089354e-8366-4e18-aea3-4cb4a3a50b48", "41ce06d1-d81b-4ea0-bc6d-2ce3dd2f8e87", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.VariableLibrary = variablelibrary.VariableLibrary{
	// 	Type: to.Ptr(variablelibrary.ItemTypeVariableLibrary),
	// 	Description: to.Ptr("A VariableLibrary description."),
	// 	DisplayName: to.Ptr("VariableLibrary 1"),
	// 	ID: to.Ptr("41ce06d1-d81b-4ea0-bc6d-2ce3dd2f8e87"),
	// 	WorkspaceID: to.Ptr("f089354e-8366-4e18-aea3-4cb4a3a50b48"),
	// 	Properties: &variablelibrary.Properties{
	// 		ActiveValueSetName: to.Ptr("Default value set"),
	// 	},
	// }
}

// Generated from example definition
func ExampleItemsClient_UpdateVariableLibrary() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := variablelibrary.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewItemsClient().UpdateVariableLibrary(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", variablelibrary.UpdateVariableLibraryRequest{
		Description: to.Ptr("VariableLibrary's New description"),
		DisplayName: to.Ptr("VariableLibrary's New name"),
		Properties: &variablelibrary.Properties{
			ActiveValueSetName: to.Ptr("SomeValueSetName"),
		},
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.VariableLibrary = variablelibrary.VariableLibrary{
	// 	Type: to.Ptr(variablelibrary.ItemTypeVariableLibrary),
	// 	Description: to.Ptr("VariableLibrary's New description"),
	// 	DisplayName: to.Ptr("VariableLibrary's New name"),
	// 	ID: to.Ptr("5b218778-e7a5-4d73-8187-f10824047715"),
	// 	WorkspaceID: to.Ptr("cfafbeb1-8037-4d0c-896e-a46fb27ff229"),
	// 	Properties: &variablelibrary.Properties{
	// 		ActiveValueSetName: to.Ptr("SomeValueSetName"),
	// 	},
	// }
}

// Generated from example definition
func ExampleItemsClient_DeleteVariableLibrary() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := variablelibrary.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	_, err = clientFactory.NewItemsClient().DeleteVariableLibrary(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
}

// Generated from example definition
func ExampleItemsClient_BeginGetVariableLibraryDefinition() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := variablelibrary.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewItemsClient().BeginGetVariableLibraryDefinition(ctx, "6e335e92-a2a2-4b5a-970a-bd6a89fbb765", "cfafbeb1-8037-4d0c-896e-a46fb27ff229", &variablelibrary.ItemsClientBeginGetVariableLibraryDefinitionOptions{Format: nil})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	res, err := poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.DefinitionResponse = variablelibrary.DefinitionResponse{
	// 	Definition: &variablelibrary.PublicDefinition{
	// 		Parts: []variablelibrary.PublicDefinitionPart{
	// 			{
	// 				Path: to.Ptr("variables.json"),
	// 				Payload: to.Ptr("eyJleGVjdXRhYmxlRm..OWRmNDhhY2ZmZTgifQ=="),
	// 				PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
	// 			},
	// 			{
	// 				Path: to.Ptr("valueSets/valueSet1.json"),
	// 				Payload: to.Ptr("eyJleGVjdXRhYmxlRm..OWRmNDhhY2ZmZTgifQ=="),
	// 				PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
	// 			},
	// 			{
	// 				Path: to.Ptr("settings.json"),
	// 				Payload: to.Ptr("eyJleGVjdXRhYmxlRm..OWRmNDhhY2ZmZTgifQ=="),
	// 				PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
	// 			},
	// 			{
	// 				Path: to.Ptr(".platform"),
	// 				Payload: to.Ptr("ZG90UGxhdGZvcm1CYXNlNjRTdHJpbmc="),
	// 				PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
	// 		}},
	// 	},
	// }
}

// Generated from example definition
func ExampleItemsClient_BeginUpdateVariableLibraryDefinition() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := variablelibrary.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewItemsClient().BeginUpdateVariableLibraryDefinition(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", variablelibrary.UpdateVariableLibraryDefinitionRequest{
		Definition: &variablelibrary.PublicDefinition{
			Parts: []variablelibrary.PublicDefinitionPart{
				{
					Path:        to.Ptr("variables.json"),
					Payload:     to.Ptr("eyJleGVjdXRhYmxlRm..OWRmNDhhY2ZmZTgifQ=="),
					PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
				},
				{
					Path:        to.Ptr("valueSets/valueSet1.json"),
					Payload:     to.Ptr("eyJleGVjdXRhYmxlRm..OWRmNDhhY2ZmZTgifQ=="),
					PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
				},
				{
					Path:        to.Ptr("settings.json"),
					Payload:     to.Ptr("eyJleGVjdXRhYmxlRm..OWRmNDhhY2ZmZTgifQ=="),
					PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
				},
				{
					Path:        to.Ptr(".platform"),
					Payload:     to.Ptr("ZG90UGxhdGZvcm1CYXNlNjRTdHJpbmc="),
					PayloadType: to.Ptr(variablelibrary.PayloadTypeInlineBase64),
				}},
		},
	}, &variablelibrary.ItemsClientBeginUpdateVariableLibraryDefinitionOptions{UpdateMetadata: to.Ptr(true)})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}
