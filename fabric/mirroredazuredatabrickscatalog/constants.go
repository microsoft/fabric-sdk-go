// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package mirroredazuredatabrickscatalog

// AutoSync - Enable or disable automatic synchronization for the catalog. When enabled, all metadata changes, including schemas
// and tables, are automatically synchronized every 15 minutes. When disabled, users
// must manually refresh the metadata. This setting can only be modified during an update request. Additional autoSync types
// may be added over time.
type AutoSync string

const (
	// AutoSyncDisabled - Automatic synchronization is disabled.
	AutoSyncDisabled AutoSync = "Disabled"
	// AutoSyncEnabled - Automatic synchronization is enabled.
	AutoSyncEnabled AutoSync = "Enabled"
)

// PossibleAutoSyncValues returns the possible values for the AutoSync const type.
func PossibleAutoSyncValues() []AutoSync {
	return []AutoSync{
		AutoSyncDisabled,
		AutoSyncEnabled,
	}
}

// CatalogType - The type of the catalog. Additional CatalogType types may be added over time.
type CatalogType string

const (
	// CatalogTypeMANAGEDCATALOG - Managed Catalog
	CatalogTypeMANAGEDCATALOG CatalogType = "MANAGED_CATALOG"
)

// PossibleCatalogTypeValues returns the possible values for the CatalogType const type.
func PossibleCatalogTypeValues() []CatalogType {
	return []CatalogType{
		CatalogTypeMANAGEDCATALOG,
	}
}

// DataSourceFormat - The data source format of the table. Additional DataSourceFormat types may be added over time.
type DataSourceFormat string

const (
	// DataSourceFormatDELTA - Delta format
	DataSourceFormatDELTA DataSourceFormat = "DELTA"
)

// PossibleDataSourceFormatValues returns the possible values for the DataSourceFormat const type.
func PossibleDataSourceFormatValues() []DataSourceFormat {
	return []DataSourceFormat{
		DataSourceFormatDELTA,
	}
}

// ItemType - The type of the item. Additional item types may be added over time.
type ItemType string

const (
	// ItemTypeApacheAirflowJob - An ApacheAirflowJob.
	ItemTypeApacheAirflowJob ItemType = "ApacheAirflowJob"
	// ItemTypeCopyJob - A Copy job.
	ItemTypeCopyJob ItemType = "CopyJob"
	// ItemTypeDashboard - PowerBI dashboard.
	ItemTypeDashboard ItemType = "Dashboard"
	// ItemTypeDataPipeline - A data pipeline.
	ItemTypeDataPipeline ItemType = "DataPipeline"
	// ItemTypeDataflow - A Dataflow.
	ItemTypeDataflow ItemType = "Dataflow"
	// ItemTypeDatamart - PowerBI datamart.
	ItemTypeDatamart ItemType = "Datamart"
	// ItemTypeDigitalTwinBuilder - A DigitalTwinBuilder.
	ItemTypeDigitalTwinBuilder ItemType = "DigitalTwinBuilder"
	// ItemTypeDigitalTwinBuilderFlow - A Digital Twin Builder Flow.
	ItemTypeDigitalTwinBuilderFlow ItemType = "DigitalTwinBuilderFlow"
	// ItemTypeEnvironment - An environment.
	ItemTypeEnvironment ItemType = "Environment"
	// ItemTypeEventhouse - An eventhouse.
	ItemTypeEventhouse ItemType = "Eventhouse"
	// ItemTypeEventstream - An eventstream.
	ItemTypeEventstream ItemType = "Eventstream"
	// ItemTypeGraphQLAPI - An API for GraphQL item.
	ItemTypeGraphQLAPI ItemType = "GraphQLApi"
	// ItemTypeKQLDashboard - A KQL dashboard.
	ItemTypeKQLDashboard ItemType = "KQLDashboard"
	// ItemTypeKQLDatabase - A KQL database.
	ItemTypeKQLDatabase ItemType = "KQLDatabase"
	// ItemTypeKQLQueryset - A KQL queryset.
	ItemTypeKQLQueryset ItemType = "KQLQueryset"
	// ItemTypeLakehouse - A lakehouse.
	ItemTypeLakehouse ItemType = "Lakehouse"
	// ItemTypeMLExperiment - A machine learning experiment.
	ItemTypeMLExperiment ItemType = "MLExperiment"
	// ItemTypeMLModel - A machine learning model.
	ItemTypeMLModel ItemType = "MLModel"
	// ItemTypeMirroredAzureDatabricksCatalog - A mirrored azure databricks catalog.
	ItemTypeMirroredAzureDatabricksCatalog ItemType = "MirroredAzureDatabricksCatalog"
	// ItemTypeMirroredDatabase - A mirrored database.
	ItemTypeMirroredDatabase ItemType = "MirroredDatabase"
	// ItemTypeMirroredWarehouse - A mirrored warehouse.
	ItemTypeMirroredWarehouse ItemType = "MirroredWarehouse"
	// ItemTypeMountedDataFactory - A MountedDataFactory.
	ItemTypeMountedDataFactory ItemType = "MountedDataFactory"
	// ItemTypeNotebook - A notebook.
	ItemTypeNotebook ItemType = "Notebook"
	// ItemTypePaginatedReport - PowerBI paginated report.
	ItemTypePaginatedReport ItemType = "PaginatedReport"
	// ItemTypeReflex - A Reflex.
	ItemTypeReflex ItemType = "Reflex"
	// ItemTypeReport - PowerBI report.
	ItemTypeReport ItemType = "Report"
	// ItemTypeSQLDatabase - A SQLDatabase.
	ItemTypeSQLDatabase ItemType = "SQLDatabase"
	// ItemTypeSQLEndpoint - An SQL endpoint.
	ItemTypeSQLEndpoint ItemType = "SQLEndpoint"
	// ItemTypeSemanticModel - PowerBI semantic model.
	ItemTypeSemanticModel ItemType = "SemanticModel"
	// ItemTypeSparkJobDefinition - A spark job definition.
	ItemTypeSparkJobDefinition ItemType = "SparkJobDefinition"
	// ItemTypeVariableLibrary - A VariableLibrary.
	ItemTypeVariableLibrary ItemType = "VariableLibrary"
	// ItemTypeWarehouse - A warehouse.
	ItemTypeWarehouse ItemType = "Warehouse"
	// ItemTypeWarehouseSnapshot - A Warehouse snapshot.
	ItemTypeWarehouseSnapshot ItemType = "WarehouseSnapshot"
)

// PossibleItemTypeValues returns the possible values for the ItemType const type.
func PossibleItemTypeValues() []ItemType {
	return []ItemType{
		ItemTypeApacheAirflowJob,
		ItemTypeCopyJob,
		ItemTypeDashboard,
		ItemTypeDataPipeline,
		ItemTypeDataflow,
		ItemTypeDatamart,
		ItemTypeDigitalTwinBuilder,
		ItemTypeDigitalTwinBuilderFlow,
		ItemTypeEnvironment,
		ItemTypeEventhouse,
		ItemTypeEventstream,
		ItemTypeGraphQLAPI,
		ItemTypeKQLDashboard,
		ItemTypeKQLDatabase,
		ItemTypeKQLQueryset,
		ItemTypeLakehouse,
		ItemTypeMLExperiment,
		ItemTypeMLModel,
		ItemTypeMirroredAzureDatabricksCatalog,
		ItemTypeMirroredDatabase,
		ItemTypeMirroredWarehouse,
		ItemTypeMountedDataFactory,
		ItemTypeNotebook,
		ItemTypePaginatedReport,
		ItemTypeReflex,
		ItemTypeReport,
		ItemTypeSQLDatabase,
		ItemTypeSQLEndpoint,
		ItemTypeSemanticModel,
		ItemTypeSparkJobDefinition,
		ItemTypeVariableLibrary,
		ItemTypeWarehouse,
		ItemTypeWarehouseSnapshot,
	}
}

// MirrorStatus - Status of mirroring. Additional status may be added over time.
type MirrorStatus string

const (
	// MirrorStatusMirrored - Indicates that the entire catalog has been successfully mirrored, ensuring that all schemas and
	// tables from the source are fully synchronized with the MirroredAzureDatabricksCatalog item.
	MirrorStatusMirrored MirrorStatus = "Mirrored"
	// MirrorStatusNotMirrored - Indicates that the catalog has not been mirrored yet. No schemas or tables are synchronized by
	// default unless explicitly configured.
	MirrorStatusNotMirrored MirrorStatus = "NotMirrored"
)

// PossibleMirrorStatusValues returns the possible values for the MirrorStatus const type.
func PossibleMirrorStatusValues() []MirrorStatus {
	return []MirrorStatus{
		MirrorStatusMirrored,
		MirrorStatusNotMirrored,
	}
}

// MirroringModes - Mode for mirroring. Additional mirroringMode may be added over time.
type MirroringModes string

const (
	// MirroringModesFull - Mirror everything inside a catalog except specifically excluded schemas and tables. Everything is
	// synced by default if no exclusion is provided.
	MirroringModesFull MirroringModes = "Full"
	// MirroringModesPartial - Only selected schemas and tables are mirrored. Nothing is synced by default.
	MirroringModesPartial MirroringModes = "Partial"
)

// PossibleMirroringModesValues returns the possible values for the MirroringModes const type.
func PossibleMirroringModesValues() []MirroringModes {
	return []MirroringModes{
		MirroringModesFull,
		MirroringModesPartial,
	}
}

// PayloadType - The type of the definition part payload. Additional payload types may be added over time.
type PayloadType string

const (
	// PayloadTypeInlineBase64 - Inline Base 64.
	PayloadTypeInlineBase64 PayloadType = "InlineBase64"
)

// PossiblePayloadTypeValues returns the possible values for the PayloadType const type.
func PossiblePayloadTypeValues() []PayloadType {
	return []PayloadType{
		PayloadTypeInlineBase64,
	}
}

// Status - The sync status. Additional status may be added over time.
type Status string

const (
	// StatusFailed - The mirroring process has failed.
	StatusFailed Status = "Failed"
	// StatusInProgress - The mirroring process is currently in progress.
	StatusInProgress Status = "InProgress"
	// StatusNotStarted - The catalog mirroring is not started yet
	StatusNotStarted Status = "NotStarted"
	// StatusSuccess - The catalog has been successfully mirrored.
	StatusSuccess Status = "Success"
)

// PossibleStatusValues returns the possible values for the Status const type.
func PossibleStatusValues() []Status {
	return []Status{
		StatusFailed,
		StatusInProgress,
		StatusNotStarted,
		StatusSuccess,
	}
}

// TableType - The type of the table. Additional TableType types may be added over time.
type TableType string

const (
	// TableTypeEXTERNAL - External Table
	TableTypeEXTERNAL TableType = "EXTERNAL"
	// TableTypeMANAGED - Managed Table
	TableTypeMANAGED TableType = "MANAGED"
)

// PossibleTableTypeValues returns the possible values for the TableType const type.
func PossibleTableTypeValues() []TableType {
	return []TableType{
		TableTypeEXTERNAL,
		TableTypeMANAGED,
	}
}
