// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package mirroreddatabase

import "time"

// CreateMirroredDatabaseRequest - Create mirrored database request payload.
type CreateMirroredDatabaseRequest struct {
	// REQUIRED; The mirrored database public definition.
	Definition *Definition

	// REQUIRED; The mirrored database display name. The display name must follow naming rules according to item type.
	DisplayName *string

	// The mirrored database description. Maximum length is 256 characters.
	Description *string

	// The folder ID. If not specified or null, the mirrored database is created with the workspace as its folder.
	FolderID *string
}

// Definition - Mirrored database public definition object.
type Definition struct {
	// REQUIRED; A list of definition parts.
	Parts []DefinitionPart
}

// DefinitionPart - Mirrored database definition part object.
type DefinitionPart struct {
	// The mirrored database part path.
	Path *string

	// The mirrored database part payload.
	Payload *string

	// The payload type.
	PayloadType *PayloadType
}

// DefinitionResponse - Mirrored database public definition response.
type DefinitionResponse struct {
	// READ-ONLY; Mirrored database public definition object.
	Definition *Definition
}

// ErrorRelatedResource - The error related resource details object.
type ErrorRelatedResource struct {
	// READ-ONLY; The resource ID that's involved in the error.
	ResourceID *string

	// READ-ONLY; The type of the resource that's involved in the error.
	ResourceType *string
}

// ErrorResponse - The error response.
type ErrorResponse struct {
	// READ-ONLY; A specific identifier that provides information about an error condition, allowing for standardized communication
	// between our service and its users.
	ErrorCode *string

	// READ-ONLY; A human readable representation of the error.
	Message *string

	// READ-ONLY; List of additional error details.
	MoreDetails []ErrorResponseDetails

	// READ-ONLY; The error related resource details.
	RelatedResource *ErrorRelatedResource

	// READ-ONLY; ID of the request associated with the error.
	RequestID *string
}

// ErrorResponseDetails - The error response details.
type ErrorResponseDetails struct {
	// READ-ONLY; A specific identifier that provides information about an error condition, allowing for standardized communication
	// between our service and its users.
	ErrorCode *string

	// READ-ONLY; A human readable representation of the error.
	Message *string

	// READ-ONLY; The error related resource details.
	RelatedResource *ErrorRelatedResource
}

// ItemTag - Represents a tag applied on an item.
type ItemTag struct {
	// REQUIRED; The name of the tag.
	DisplayName *string

	// REQUIRED; The tag ID.
	ID *string
}

// MirroredDatabase - A mirrored database item.
type MirroredDatabase struct {
	// REQUIRED; The item type.
	Type *ItemType

	// The item description.
	Description *string

	// The item display name.
	DisplayName *string

	// The mirrored database properties.
	Properties *Properties

	// READ-ONLY; The folder ID.
	FolderID *string

	// READ-ONLY; The item ID.
	ID *string

	// READ-ONLY; List of applied tags.
	Tags []ItemTag

	// READ-ONLY; The workspace ID.
	WorkspaceID *string
}

// MirroredDatabases - A list of mirrored databases.
type MirroredDatabases struct {
	// REQUIRED; A list of mirrored databases.
	Value []MirroredDatabase

	// The token for the next result set batch. If there are no more records, it's removed from the response.
	ContinuationToken *string

	// The URI of the next result set batch. If there are no more records, it's removed from the response.
	ContinuationURI *string
}

// MirroringStatusResponse - Response of getting mirroring status.
type MirroringStatusResponse struct {
	// REQUIRED; The status of mirroring
	Status *MirroringStatus

	// READ-ONLY; Error is set if error happens in mirroring
	Error *ErrorResponse
}

// Properties - The mirrored database properties.
type Properties struct {
	// Default schema of the mirrored database. This property is returned only for mirrored database that enables default schema
	// in definition.
	DefaultSchema *string

	// OneLake path to the mirrored database tables directory.
	OneLakeTablesPath *string

	// An object containing the properties of the SQL endpoint.
	SQLEndpointProperties *SQLEndpointProperties
}

// SQLEndpointProperties - An object containing the properties of the SQL endpoint.
type SQLEndpointProperties struct {
	// REQUIRED; The SQL endpoint provisioning status.
	ProvisioningStatus *SQLEndpointProvisioningStatus

	// SQL endpoint connection string.
	ConnectionString *string

	// SQL endpoint ID.
	ID *string
}

// TableMirroringMetrics - Table mirroring metrics.
type TableMirroringMetrics struct {
	// REQUIRED; Last processed time of the table in in UTC, using the YYYY-MM-DDTHH:mm:ssZ format.
	LastSyncDateTime *time.Time

	// REQUIRED; Processed bytes for this table.
	ProcessedBytes *int64

	// REQUIRED; Processed row count for this table.
	ProcessedRows *int64
}

// TableMirroringStatusResponse - Table mirroring status response.
type TableMirroringStatusResponse struct {
	// REQUIRED; Source object type.
	SourceObjectType *TableSourceObjectType

	// REQUIRED; The mirroring status type of table.
	Status *TableMirroringStatus

	// The mirroring metrics of table.
	Metrics *TableMirroringMetrics

	// Source table schema name.
	SourceSchemaName *string

	// Source table name.
	SourceTableName *string

	// READ-ONLY; Table level error is set if error happens in mirroring for this table
	Error *ErrorResponse
}

// TablesMirroringStatusResponse - A paginated list of table mirroring statuses.
type TablesMirroringStatusResponse struct {
	// REQUIRED; A list of table mirroring statuses.
	Data []TableMirroringStatusResponse

	// The token for the next result set batch. If there are no more records, it's removed from the response.
	ContinuationToken *string

	// The URI of the next result set batch. If there are no more records, it's removed from the response.
	ContinuationURI *string
}

// UpdateMirroredDatabaseDefinitionRequest - Update mirrored database public definition request payload.
type UpdateMirroredDatabaseDefinitionRequest struct {
	// REQUIRED; Mirrored database public definition object.
	Definition *Definition
}

// UpdateMirroredDatabaseRequest - Update mirrored database request.
type UpdateMirroredDatabaseRequest struct {
	// The mirrored database description. Maximum length is 256 characters.
	Description *string

	// The mirrored database display name. The display name must follow naming rules according to item type.
	DisplayName *string
}
