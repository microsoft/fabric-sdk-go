// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package warehouse

// AuditSettingsState - Audit settings state. Additional AuditSettingsState may be added over time.
type AuditSettingsState string

const (
	// AuditSettingsStateDisabled - Disable the SQL audit.
	AuditSettingsStateDisabled AuditSettingsState = "Disabled"
	// AuditSettingsStateEnabled - Enable the SQL audit.
	AuditSettingsStateEnabled AuditSettingsState = "Enabled"
)

// PossibleAuditSettingsStateValues returns the possible values for the AuditSettingsState const type.
func PossibleAuditSettingsStateValues() []AuditSettingsState {
	return []AuditSettingsState{
		AuditSettingsStateDisabled,
		AuditSettingsStateEnabled,
	}
}

// CollationType - Warehouse collation. Additional collations may be added over time.
type CollationType string

const (
	// CollationTypeLatin1General100BIN2UTF8 - The default - case-sensitive (CS) collation
	CollationTypeLatin1General100BIN2UTF8 CollationType = "Latin1_General_100_BIN2_UTF8"
	// CollationTypeLatin1General100CIASKSWSSCUTF8 - case-insensitive (CI) collation
	CollationTypeLatin1General100CIASKSWSSCUTF8 CollationType = "Latin1_General_100_CI_AS_KS_WS_SC_UTF8"
)

// PossibleCollationTypeValues returns the possible values for the CollationType const type.
func PossibleCollationTypeValues() []CollationType {
	return []CollationType{
		CollationTypeLatin1General100BIN2UTF8,
		CollationTypeLatin1General100CIASKSWSSCUTF8,
	}
}

// CreationModeType - The creation mode of the restore point. Additional creation mode types may be added over time.
type CreationModeType string

const (
	// CreationModeTypeSystemCreated - System created restore point.
	CreationModeTypeSystemCreated CreationModeType = "SystemCreated"
	// CreationModeTypeUserDefined - User defined restore point.
	CreationModeTypeUserDefined CreationModeType = "UserDefined"
)

// PossibleCreationModeTypeValues returns the possible values for the CreationModeType const type.
func PossibleCreationModeTypeValues() []CreationModeType {
	return []CreationModeType{
		CreationModeTypeSystemCreated,
		CreationModeTypeUserDefined,
	}
}

// GroupType - The type of the group. Additional group types may be added over time.
type GroupType string

const (
	// GroupTypeDistributionList - Principal is a distribution list.
	GroupTypeDistributionList GroupType = "DistributionList"
	// GroupTypeSecurityGroup - Principal is a security group.
	GroupTypeSecurityGroup GroupType = "SecurityGroup"
	// GroupTypeUnknown - Principal group type is unknown.
	GroupTypeUnknown GroupType = "Unknown"
)

// PossibleGroupTypeValues returns the possible values for the GroupType const type.
func PossibleGroupTypeValues() []GroupType {
	return []GroupType{
		GroupTypeDistributionList,
		GroupTypeSecurityGroup,
		GroupTypeUnknown,
	}
}

// ItemType - The type of the item. Additional item types may be added over time.
type ItemType string

const (
	// ItemTypeApacheAirflowJob - An ApacheAirflowJob.
	ItemTypeApacheAirflowJob ItemType = "ApacheAirflowJob"
	// ItemTypeCopyJob - A Copy job.
	ItemTypeCopyJob ItemType = "CopyJob"
	// ItemTypeDashboard - PowerBI dashboard.
	ItemTypeDashboard ItemType = "Dashboard"
	// ItemTypeDataPipeline - A data pipeline.
	ItemTypeDataPipeline ItemType = "DataPipeline"
	// ItemTypeDataflow - A Dataflow.
	ItemTypeDataflow ItemType = "Dataflow"
	// ItemTypeDatamart - PowerBI datamart.
	ItemTypeDatamart ItemType = "Datamart"
	// ItemTypeDigitalTwinBuilder - A DigitalTwinBuilder.
	ItemTypeDigitalTwinBuilder ItemType = "DigitalTwinBuilder"
	// ItemTypeDigitalTwinBuilderFlow - A Digital Twin Builder Flow.
	ItemTypeDigitalTwinBuilderFlow ItemType = "DigitalTwinBuilderFlow"
	// ItemTypeEnvironment - An environment.
	ItemTypeEnvironment ItemType = "Environment"
	// ItemTypeEventhouse - An eventhouse.
	ItemTypeEventhouse ItemType = "Eventhouse"
	// ItemTypeEventstream - An eventstream.
	ItemTypeEventstream ItemType = "Eventstream"
	// ItemTypeGraphQLAPI - An API for GraphQL item.
	ItemTypeGraphQLAPI ItemType = "GraphQLApi"
	// ItemTypeKQLDashboard - A KQL dashboard.
	ItemTypeKQLDashboard ItemType = "KQLDashboard"
	// ItemTypeKQLDatabase - A KQL database.
	ItemTypeKQLDatabase ItemType = "KQLDatabase"
	// ItemTypeKQLQueryset - A KQL queryset.
	ItemTypeKQLQueryset ItemType = "KQLQueryset"
	// ItemTypeLakehouse - A lakehouse.
	ItemTypeLakehouse ItemType = "Lakehouse"
	// ItemTypeMLExperiment - A machine learning experiment.
	ItemTypeMLExperiment ItemType = "MLExperiment"
	// ItemTypeMLModel - A machine learning model.
	ItemTypeMLModel ItemType = "MLModel"
	// ItemTypeMirroredAzureDatabricksCatalog - A mirrored azure databricks catalog.
	ItemTypeMirroredAzureDatabricksCatalog ItemType = "MirroredAzureDatabricksCatalog"
	// ItemTypeMirroredDatabase - A mirrored database.
	ItemTypeMirroredDatabase ItemType = "MirroredDatabase"
	// ItemTypeMirroredWarehouse - A mirrored warehouse.
	ItemTypeMirroredWarehouse ItemType = "MirroredWarehouse"
	// ItemTypeMountedDataFactory - A MountedDataFactory.
	ItemTypeMountedDataFactory ItemType = "MountedDataFactory"
	// ItemTypeNotebook - A notebook.
	ItemTypeNotebook ItemType = "Notebook"
	// ItemTypePaginatedReport - PowerBI paginated report.
	ItemTypePaginatedReport ItemType = "PaginatedReport"
	// ItemTypeReflex - A Reflex.
	ItemTypeReflex ItemType = "Reflex"
	// ItemTypeReport - PowerBI report.
	ItemTypeReport ItemType = "Report"
	// ItemTypeSQLDatabase - A SQLDatabase.
	ItemTypeSQLDatabase ItemType = "SQLDatabase"
	// ItemTypeSQLEndpoint - An SQL endpoint.
	ItemTypeSQLEndpoint ItemType = "SQLEndpoint"
	// ItemTypeSemanticModel - PowerBI semantic model.
	ItemTypeSemanticModel ItemType = "SemanticModel"
	// ItemTypeSparkJobDefinition - A spark job definition.
	ItemTypeSparkJobDefinition ItemType = "SparkJobDefinition"
	// ItemTypeVariableLibrary - A VariableLibrary.
	ItemTypeVariableLibrary ItemType = "VariableLibrary"
	// ItemTypeWarehouse - A warehouse.
	ItemTypeWarehouse ItemType = "Warehouse"
	// ItemTypeWarehouseSnapshot - A Warehouse snapshot.
	ItemTypeWarehouseSnapshot ItemType = "WarehouseSnapshot"
)

// PossibleItemTypeValues returns the possible values for the ItemType const type.
func PossibleItemTypeValues() []ItemType {
	return []ItemType{
		ItemTypeApacheAirflowJob,
		ItemTypeCopyJob,
		ItemTypeDashboard,
		ItemTypeDataPipeline,
		ItemTypeDataflow,
		ItemTypeDatamart,
		ItemTypeDigitalTwinBuilder,
		ItemTypeDigitalTwinBuilderFlow,
		ItemTypeEnvironment,
		ItemTypeEventhouse,
		ItemTypeEventstream,
		ItemTypeGraphQLAPI,
		ItemTypeKQLDashboard,
		ItemTypeKQLDatabase,
		ItemTypeKQLQueryset,
		ItemTypeLakehouse,
		ItemTypeMLExperiment,
		ItemTypeMLModel,
		ItemTypeMirroredAzureDatabricksCatalog,
		ItemTypeMirroredDatabase,
		ItemTypeMirroredWarehouse,
		ItemTypeMountedDataFactory,
		ItemTypeNotebook,
		ItemTypePaginatedReport,
		ItemTypeReflex,
		ItemTypeReport,
		ItemTypeSQLDatabase,
		ItemTypeSQLEndpoint,
		ItemTypeSemanticModel,
		ItemTypeSparkJobDefinition,
		ItemTypeVariableLibrary,
		ItemTypeWarehouse,
		ItemTypeWarehouseSnapshot,
	}
}

// PrincipalType - The type of the principal. Additional principal types may be added over time.
type PrincipalType string

const (
	// PrincipalTypeEntireTenant - Principal represents all tenant users.
	PrincipalTypeEntireTenant PrincipalType = "EntireTenant"
	// PrincipalTypeGroup - Principal is a security group.
	PrincipalTypeGroup PrincipalType = "Group"
	// PrincipalTypeServicePrincipal - Principal is a Microsoft Entra service principal.
	PrincipalTypeServicePrincipal PrincipalType = "ServicePrincipal"
	// PrincipalTypeServicePrincipalProfile - Principal is a service principal profile.
	PrincipalTypeServicePrincipalProfile PrincipalType = "ServicePrincipalProfile"
	// PrincipalTypeUser - Principal is a Microsoft Entra user principal.
	PrincipalTypeUser PrincipalType = "User"
)

// PossiblePrincipalTypeValues returns the possible values for the PrincipalType const type.
func PossiblePrincipalTypeValues() []PrincipalType {
	return []PrincipalType{
		PrincipalTypeEntireTenant,
		PrincipalTypeGroup,
		PrincipalTypeServicePrincipal,
		PrincipalTypeServicePrincipalProfile,
		PrincipalTypeUser,
	}
}

type PrivateLinkType string

const (
	// PrivateLinkTypeNone - No private link (default).
	PrivateLinkTypeNone PrivateLinkType = "None"
	// PrivateLinkTypeWorkspace - Workspace private Link.
	PrivateLinkTypeWorkspace PrivateLinkType = "Workspace"
)

// PossiblePrivateLinkTypeValues returns the possible values for the PrivateLinkType const type.
func PossiblePrivateLinkTypeValues() []PrivateLinkType {
	return []PrivateLinkType{
		PrivateLinkTypeNone,
		PrivateLinkTypeWorkspace,
	}
}
