// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package warehouse_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"

	"github.com/microsoft/fabric-sdk-go/fabric/warehouse"
)

// Generated from example definition
func ExampleRestorePointsClient_NewListRestorePointsPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := warehouse.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	pager := clientFactory.NewRestorePointsClient().NewListRestorePointsPager("cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", &warehouse.RestorePointsClientListRestorePointsOptions{ContinuationToken: nil})
	for pager.More() {
		page, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range page.Value {
			// You could use page here. We use blank identifier for just demo purposes.
			_ = v
		}
		// If the HTTP response code is 200 as defined in example definition, your page structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
		// page.RestorePoints = warehouse.RestorePoints{
		// 	Value: []warehouse.RestorePoint{
		// 		{
		// 			Description: to.Ptr("Restore point 1 description."),
		// 			CreationDetails: &warehouse.RestorePointEventDetails{
		// 				EventDateTime: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-10-18T22:17:09.000Z"); return t}()),
		// 				EventInitiator: &warehouse.Principal{
		// 					Type: to.Ptr(warehouse.PrincipalTypeUser),
		// 					DisplayName: to.Ptr("Jacob Hancock"),
		// 					ID: to.Ptr("f3052d1c-61a9-46fb-8df9-0d78916ae041"),
		// 					UserDetails: &warehouse.PrincipalUserDetails{
		// 						UserPrincipalName: to.Ptr("jacob@contoso.com"),
		// 					},
		// 				},
		// 			},
		// 			CreationMode: to.Ptr(warehouse.CreationModeTypeUserDefined),
		// 			DisplayName: to.Ptr("Restore point 1"),
		// 			ID: to.Ptr("1726617378000"),
		// 		},
		// 		{
		// 			Description: to.Ptr(""),
		// 			CreationDetails: &warehouse.RestorePointEventDetails{
		// 				EventDateTime: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-10-18T22:17:09.000Z"); return t}()),
		// 			},
		// 			CreationMode: to.Ptr(warehouse.CreationModeTypeSystemCreated),
		// 			DisplayName: to.Ptr("Restore point"),
		// 			ID: to.Ptr("1726617379000"),
		// 	}},
		// }
	}
}

// Generated from example definition
func ExampleRestorePointsClient_BeginCreateRestorePoint() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := warehouse.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewRestorePointsClient().BeginCreateRestorePoint(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", warehouse.CreateRestorePointRequest{
		Description: to.Ptr("Restore point 1 description."),
		DisplayName: to.Ptr("Restore point 1"),
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}

// Generated from example definition
func ExampleRestorePointsClient_GetRestorePoint() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := warehouse.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewRestorePointsClient().GetRestorePoint(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", "1726617378000", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.RestorePoint = warehouse.RestorePoint{
	// 	Description: to.Ptr("Restore point 1 description."),
	// 	CreationDetails: &warehouse.RestorePointEventDetails{
	// 		EventDateTime: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-10-18T22:17:09.000Z"); return t}()),
	// 		EventInitiator: &warehouse.Principal{
	// 			Type: to.Ptr(warehouse.PrincipalTypeUser),
	// 			DisplayName: to.Ptr("Jacob Hancock"),
	// 			ID: to.Ptr("f3052d1c-61a9-46fb-8df9-0d78916ae041"),
	// 			UserDetails: &warehouse.PrincipalUserDetails{
	// 				UserPrincipalName: to.Ptr("jacob@contoso.com"),
	// 			},
	// 		},
	// 	},
	// 	CreationMode: to.Ptr(warehouse.CreationModeTypeUserDefined),
	// 	DisplayName: to.Ptr("Restore point 1"),
	// 	ID: to.Ptr("1726617378000"),
	// }
}

// Generated from example definition
func ExampleRestorePointsClient_DeleteRestorePoint() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := warehouse.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	_, err = clientFactory.NewRestorePointsClient().DeleteRestorePoint(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", "1726617378000", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
}

// Generated from example definition
func ExampleRestorePointsClient_UpdateRestorePoint() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := warehouse.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewRestorePointsClient().UpdateRestorePoint(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", "1726617378000", warehouse.UpdateRestorePointRequest{
		Description: to.Ptr("Restore point 3 description."),
		DisplayName: to.Ptr("Restore point 3"),
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.RestorePoint = warehouse.RestorePoint{
	// 	Description: to.Ptr("Restore point 3 description."),
	// 	CreationDetails: &warehouse.RestorePointEventDetails{
	// 		EventDateTime: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-10-18T22:17:09.000Z"); return t}()),
	// 		EventInitiator: &warehouse.Principal{
	// 			Type: to.Ptr(warehouse.PrincipalTypeUser),
	// 			DisplayName: to.Ptr("Jacob Hancock"),
	// 			ID: to.Ptr("f3052d1c-61a9-46fb-8df9-0d78916ae041"),
	// 			UserDetails: &warehouse.PrincipalUserDetails{
	// 				UserPrincipalName: to.Ptr("jacob@contoso.com"),
	// 			},
	// 		},
	// 	},
	// 	CreationMode: to.Ptr(warehouse.CreationModeTypeUserDefined),
	// 	DisplayName: to.Ptr("Restore point 3"),
	// 	ID: to.Ptr("1726617378000"),
	// }
}

// Generated from example definition
func ExampleRestorePointsClient_BeginRestoreToRestorePoint() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := warehouse.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewRestorePointsClient().BeginRestoreToRestorePoint(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", "1726617378000", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}
