// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package semanticmodel_test

import (
	"context"
	"log"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"

	"github.com/microsoft/fabric-sdk-go/fabric/semanticmodel"
)

// Generated from example definition
func ExampleItemsClient_NewListSemanticModelsPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := semanticmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	pager := clientFactory.NewItemsClient().NewListSemanticModelsPager("cfafbeb1-8037-4d0c-896e-a46fb27ff229", &semanticmodel.ItemsClientListSemanticModelsOptions{ContinuationToken: nil})
	for pager.More() {
		page, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range page.Value {
			// You could use page here. We use blank identifier for just demo purposes.
			_ = v
		}
		// If the HTTP response code is 200 as defined in example definition, your page structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
		// page.SemanticModels = semanticmodel.SemanticModels{
		// 	Value: []semanticmodel.SemanticModel{
		// 		{
		// 			Type: to.Ptr(semanticmodel.ItemTypeSemanticModel),
		// 			Description: to.Ptr("A semantic model description."),
		// 			DisplayName: to.Ptr("SemanticModel Name 1"),
		// 			ID: to.Ptr("3546052c-ae64-4526-b1a8-52af7761426f"),
		// 			WorkspaceID: to.Ptr("cfafbeb1-8037-4d0c-896e-a46fb27ff229"),
		// 	}},
		// }
	}
}

// Generated from example definition
func ExampleItemsClient_BeginCreateSemanticModel() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := semanticmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewItemsClient().BeginCreateSemanticModel(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", semanticmodel.CreateSemanticModelRequest{
		Description: to.Ptr("A semantic model description."),
		Definition: &semanticmodel.Definition{
			Parts: []semanticmodel.DefinitionPart{
				{
					Path:        to.Ptr("model.bim"),
					Payload:     to.Ptr("ew0KICAiY29tcGF0a..GVzIjogWyBdDQogIH0NCn0="),
					PayloadType: to.Ptr(semanticmodel.PayloadTypeInlineBase64),
				},
				{
					Path:        to.Ptr("definition.pbism"),
					Payload:     to.Ptr("ewogICJ2ZXJzaW9uI..NldHRpbmdzIjoge30KfQ=="),
					PayloadType: to.Ptr(semanticmodel.PayloadTypeInlineBase64),
				},
				{
					Path:        to.Ptr(".platform"),
					Payload:     to.Ptr("ZG90UGxhdGZvcm1CYXNlNjRTdHJpbmc="),
					PayloadType: to.Ptr(semanticmodel.PayloadTypeInlineBase64),
				}},
		},
		DisplayName: to.Ptr("SemanticModel 1"),
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}

// Generated from example definition
func ExampleItemsClient_GetSemanticModel() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := semanticmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewItemsClient().GetSemanticModel(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.SemanticModel = semanticmodel.SemanticModel{
	// 	Type: to.Ptr(semanticmodel.ItemTypeSemanticModel),
	// 	Description: to.Ptr("A semantic model description."),
	// 	DisplayName: to.Ptr("SemanticModel 1"),
	// 	ID: to.Ptr("5b218778-e7a5-4d73-8187-f10824047715"),
	// 	WorkspaceID: to.Ptr("cfafbeb1-8037-4d0c-896e-a46fb27ff229"),
	// }
}

// Generated from example definition
func ExampleItemsClient_UpdateSemanticModel() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := semanticmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewItemsClient().UpdateSemanticModel(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff255", "5b218778-e7a5-4d73-8187-f10824047751", semanticmodel.UpdateSemanticModelRequest{
		Description: to.Ptr("A new description for semantic model."),
		DisplayName: to.Ptr("Semantic models's New name"),
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.SemanticModel = semanticmodel.SemanticModel{
	// 	Type: to.Ptr(semanticmodel.ItemTypeSemanticModel),
	// 	Description: to.Ptr("A new description for semantic model."),
	// 	DisplayName: to.Ptr("Semantic models's New name"),
	// 	ID: to.Ptr("5b218778-e7a5-4d73-8187-f10824047751"),
	// 	WorkspaceID: to.Ptr("cfafbeb1-8037-4d0c-896e-a46fb27ff255"),
	// }
}

// Generated from example definition
func ExampleItemsClient_DeleteSemanticModel() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := semanticmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	_, err = clientFactory.NewItemsClient().DeleteSemanticModel(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
}

// Generated from example definition
func ExampleItemsClient_BeginGetSemanticModelDefinition() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := semanticmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewItemsClient().BeginGetSemanticModelDefinition(ctx, "6e335e92-a2a2-4b5a-970a-bd6a89fbb765", "cfafbeb1-8037-4d0c-896e-a46fb27ff229", &semanticmodel.ItemsClientBeginGetSemanticModelDefinitionOptions{Format: nil})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	res, err := poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.DefinitionResponse = semanticmodel.DefinitionResponse{
	// 	Definition: &semanticmodel.Definition{
	// 		Parts: []semanticmodel.DefinitionPart{
	// 			{
	// 				Path: to.Ptr("definition/database.tmdl"),
	// 				Payload: to.Ptr("<base64 encoded string>"),
	// 				PayloadType: to.Ptr(semanticmodel.PayloadTypeInlineBase64),
	// 			},
	// 			{
	// 				Path: to.Ptr("definition/model.tmdl"),
	// 				Payload: to.Ptr("<base64 encoded string>"),
	// 				PayloadType: to.Ptr(semanticmodel.PayloadTypeInlineBase64),
	// 			},
	// 			{
	// 				Path: to.Ptr("definition/tables/Table1.tmdl"),
	// 				Payload: to.Ptr("<base64 encoded string>"),
	// 				PayloadType: to.Ptr(semanticmodel.PayloadTypeInlineBase64),
	// 			},
	// 			{
	// 				Path: to.Ptr("definition.pbism"),
	// 				Payload: to.Ptr("<base64 encoded string>"),
	// 				PayloadType: to.Ptr(semanticmodel.PayloadTypeInlineBase64),
	// 			},
	// 			{
	// 				Path: to.Ptr(".platform"),
	// 				Payload: to.Ptr("ZG90UGxhdGZvcm1CYXNlNjRTdHJpbmc="),
	// 				PayloadType: to.Ptr(semanticmodel.PayloadTypeInlineBase64),
	// 		}},
	// 	},
	// }
}

// Generated from example definition
func ExampleItemsClient_BeginUpdateSemanticModelDefinition() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := semanticmodel.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewItemsClient().BeginUpdateSemanticModelDefinition(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", semanticmodel.UpdateSemanticModelDefinitionRequest{
		Definition: &semanticmodel.Definition{
			Parts: []semanticmodel.DefinitionPart{
				{
					Path:        to.Ptr("model.bim"),
					Payload:     to.Ptr("ewogICJjb21wYXRpYmlsaXR5TGV2ZW..GVzIjogWyBdDQogIH0NCn0"),
					PayloadType: to.Ptr(semanticmodel.PayloadTypeInlineBase64),
				},
				{
					Path:        to.Ptr("definition.pbism"),
					Payload:     to.Ptr("ewogICJ2ZXJzaW9uIjogIjQuMC..HRpbmdzIjoge30KfQ=="),
					PayloadType: to.Ptr(semanticmodel.PayloadTypeInlineBase64),
				},
				{
					Path:        to.Ptr(".platform"),
					Payload:     to.Ptr("ZG90UGxhdGZvcm1CYXNlNjRTdHJpbmc="),
					PayloadType: to.Ptr(semanticmodel.PayloadTypeInlineBase64),
				}},
		},
	}, &semanticmodel.ItemsClientBeginUpdateSemanticModelDefinitionOptions{UpdateMetadata: to.Ptr(true)})
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}
