// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package kqlqueryset

// ItemsClientCreateKQLQuerysetOptions contains the optional parameters for the ItemsClient.CreateKQLQueryset method.
type ItemsClientCreateKQLQuerysetOptions struct {
	// placeholder for future optional parameters
}

// ItemsClientDeleteKQLQuerysetOptions contains the optional parameters for the ItemsClient.DeleteKQLQueryset method.
type ItemsClientDeleteKQLQuerysetOptions struct {
	// placeholder for future optional parameters
}

// ItemsClientGetKQLQuerysetDefinitionOptions contains the optional parameters for the ItemsClient.GetKQLQuerysetDefinition
// method.
type ItemsClientGetKQLQuerysetDefinitionOptions struct {
	// The format of the KQL queryset public definition.
	Format *string
}

// ItemsClientGetKQLQuerysetOptions contains the optional parameters for the ItemsClient.GetKQLQueryset method.
type ItemsClientGetKQLQuerysetOptions struct {
	// placeholder for future optional parameters
}

// ItemsClientListKQLQuerysetsOptions contains the optional parameters for the ItemsClient.NewListKQLQuerysetsPager method.
type ItemsClientListKQLQuerysetsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// ItemsClientUpdateKQLQuerysetDefinitionOptions contains the optional parameters for the ItemsClient.UpdateKQLQuerysetDefinition
// method.
type ItemsClientUpdateKQLQuerysetDefinitionOptions struct {
	// When set to true and the .platform file is provided as part of the definition, the item's metadata is updated using the
	// metadata in the .platform file
	UpdateMetadata *bool
}

// ItemsClientUpdateKQLQuerysetOptions contains the optional parameters for the ItemsClient.UpdateKQLQueryset method.
type ItemsClientUpdateKQLQuerysetOptions struct {
	// placeholder for future optional parameters
}
