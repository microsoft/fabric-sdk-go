// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package warehousesnapshot_test

import (
	"context"
	"log"

	"time"

	"github.com/Azure/azure-sdk-for-go/sdk/azcore/to"
	"github.com/Azure/azure-sdk-for-go/sdk/azidentity"

	"github.com/microsoft/fabric-sdk-go/fabric/warehousesnapshot"
)

// Generated from example definition
func ExampleItemsClient_NewListWarehouseSnapshotsPager() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := warehousesnapshot.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	pager := clientFactory.NewItemsClient().NewListWarehouseSnapshotsPager("cfafbeb1-8037-4d0c-896e-a46fb27ff229", &warehousesnapshot.ItemsClientListWarehouseSnapshotsOptions{ContinuationToken: nil})
	for pager.More() {
		page, err := pager.NextPage(ctx)
		if err != nil {
			log.Fatalf("failed to advance page: %v", err)
		}
		for _, v := range page.Value {
			// You could use page here. We use blank identifier for just demo purposes.
			_ = v
		}
		// If the HTTP response code is 200 as defined in example definition, your page structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
		// page.WarehouseSnapshots = warehousesnapshot.WarehouseSnapshots{
		// 	Value: []warehousesnapshot.WarehouseSnapshot{
		// 		{
		// 			Type: to.Ptr(warehousesnapshot.ItemTypeWarehouseSnapshot),
		// 			Description: to.Ptr("A WarehouseSnapshot description."),
		// 			DisplayName: to.Ptr("WarehouseSnapshot Name 1"),
		// 			ID: to.Ptr("3546052c-ae64-4526-b1a8-52af7761426f"),
		// 			WorkspaceID: to.Ptr("cfafbeb1-8037-4d0c-896e-a46fb27ff229"),
		// 			Properties: &warehousesnapshot.Properties{
		// 				ConnectionString: to.Ptr("qvrmbuxie7we7glrekxgy6npqu-6xgyei3x2xiejip4iime6knh5m.datawarehouse.fabric.microsoft.com"),
		// 				ParentWarehouseID: to.Ptr("7332259c-fb34-4975-99db-85818fb8664f"),
		// 				SnapshotDateTime: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-10-10T15:20:15.000Z"); return t}()),
		// 			},
		// 		},
		// 		{
		// 			Type: to.Ptr(warehousesnapshot.ItemTypeWarehouseSnapshot),
		// 			Description: to.Ptr("A WarehouseSnapshot description."),
		// 			DisplayName: to.Ptr("WarehouseSnapshot Name 2"),
		// 			ID: to.Ptr("f697fb63-abd4-4399-9548-be7e3c3c0dac"),
		// 			WorkspaceID: to.Ptr("cfafbeb1-8037-4d0c-896e-a46fb27ff229"),
		// 			Properties: &warehousesnapshot.Properties{
		// 				ConnectionString: to.Ptr("qvrmbuxie7we7glrekxgy6npqu-6xgyei3x2xiejip4iime6knh5m.datawarehouse.fabric.microsoft.com"),
		// 				ParentWarehouseID: to.Ptr("7332259c-fb34-4975-99db-85818fb8664f"),
		// 				SnapshotDateTime: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-10-01T15:20:15.000Z"); return t}()),
		// 			},
		// 	}},
		// }
	}
}

// Generated from example definition
func ExampleItemsClient_BeginCreateWarehouseSnapshot() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := warehousesnapshot.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	poller, err := clientFactory.NewItemsClient().BeginCreateWarehouseSnapshot(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", warehousesnapshot.CreateWarehouseSnapshotRequest{
		Description: to.Ptr("A WarehouseSnapshot description."),
		CreationPayload: &warehousesnapshot.CreationPayload{
			ParentWarehouseID: to.Ptr("7332259c-fb34-4975-99db-85818fb8664f"),
			SnapshotDateTime:  to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-10-15T13:00:00.000Z"); return t }()),
		},
		DisplayName: to.Ptr("WarehouseSnapshot 1"),
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	_, err = poller.PollUntilDone(ctx, nil)
	if err != nil {
		log.Fatalf("failed to pull the result: %v", err)
	}
}

// Generated from example definition
func ExampleItemsClient_GetWarehouseSnapshot() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := warehousesnapshot.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewItemsClient().GetWarehouseSnapshot(ctx, "f089354e-8366-4e18-aea3-4cb4a3a50b48", "41ce06d1-d81b-4ea0-bc6d-2ce3dd2f8e87", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.WarehouseSnapshot = warehousesnapshot.WarehouseSnapshot{
	// 	Type: to.Ptr(warehousesnapshot.ItemTypeWarehouseSnapshot),
	// 	Description: to.Ptr("A WarehouseSnapshot description."),
	// 	DisplayName: to.Ptr("WarehouseSnapshot 1"),
	// 	ID: to.Ptr("5b218778-e7a5-4d73-8187-f10824047715"),
	// 	WorkspaceID: to.Ptr("cfafbeb1-8037-4d0c-896e-a46fb27ff229"),
	// 	Properties: &warehousesnapshot.Properties{
	// 		ConnectionString: to.Ptr("qvrmbuxie7we7glrekxgy6npqu-6xgyei3x2xiejip4iime6knh5m.datawarehouse.fabric.microsoft.com"),
	// 		ParentWarehouseID: to.Ptr("7332259c-fb34-4975-99db-85818fb8664f"),
	// 		SnapshotDateTime: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-10-10T15:20:15.000Z"); return t}()),
	// 	},
	// }
}

// Generated from example definition
func ExampleItemsClient_UpdateWarehouseSnapshot() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := warehousesnapshot.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	res, err := clientFactory.NewItemsClient().UpdateWarehouseSnapshot(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", warehousesnapshot.UpdateWarehouseSnapshotRequest{
		Description: to.Ptr("WarehouseSnapshot's New description"),
		DisplayName: to.Ptr("WarehouseSnapshot's New name"),
		Properties: &warehousesnapshot.UpdateProperties{
			SnapshotDateTime: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-10-10T15:20:15.000Z"); return t }()),
		},
	}, nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
	// You could use response here. We use blank identifier for just demo purposes.
	_ = res
	// If the HTTP response code is 200 as defined in example definition, your response structure would look as follows. Please pay attention that all the values in the output are fake values for just demo purposes.
	// res.WarehouseSnapshot = warehousesnapshot.WarehouseSnapshot{
	// 	Type: to.Ptr(warehousesnapshot.ItemTypeWarehouseSnapshot),
	// 	Description: to.Ptr("WarehouseSnapshot's New description"),
	// 	DisplayName: to.Ptr("WarehouseSnapshot's New name"),
	// 	ID: to.Ptr("5b218778-e7a5-4d73-8187-f10824047715"),
	// 	WorkspaceID: to.Ptr("cfafbeb1-8037-4d0c-896e-a46fb27ff229"),
	// 	Properties: &warehousesnapshot.Properties{
	// 		ConnectionString: to.Ptr("qvrmbuxie7we7glrekxgy6npqu-6xgyei3x2xiejip4iime6knh5m.datawarehouse.fabric.microsoft.com"),
	// 		ParentWarehouseID: to.Ptr("7332259c-fb34-4975-99db-85818fb8664f"),
	// 		SnapshotDateTime: to.Ptr(func() time.Time { t, _ := time.Parse(time.RFC3339Nano, "2024-10-10T15:20:15.000Z"); return t}()),
	// 	},
	// }
}

// Generated from example definition
func ExampleItemsClient_DeleteWarehouseSnapshot() {
	cred, err := azidentity.NewDefaultAzureCredential(nil)
	if err != nil {
		log.Fatalf("failed to obtain a credential: %v", err)
	}
	ctx := context.Background()
	clientFactory, err := warehousesnapshot.NewClientFactory(cred, nil, nil)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}
	_, err = clientFactory.NewItemsClient().DeleteWarehouseSnapshot(ctx, "cfafbeb1-8037-4d0c-896e-a46fb27ff229", "5b218778-e7a5-4d73-8187-f10824047715", nil)
	if err != nil {
		log.Fatalf("failed to finish the request: %v", err)
	}
}
