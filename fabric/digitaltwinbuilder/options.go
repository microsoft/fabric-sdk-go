// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package digitaltwinbuilder

// ItemsClientBeginCreateDigitalTwinBuilderOptions contains the optional parameters for the ItemsClient.BeginCreateDigitalTwinBuilder
// method.
type ItemsClientBeginCreateDigitalTwinBuilderOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// ItemsClientBeginGetDigitalTwinBuilderDefinitionOptions contains the optional parameters for the ItemsClient.BeginGetDigitalTwinBuilderDefinition
// method.
type ItemsClientBeginGetDigitalTwinBuilderDefinitionOptions struct {
	// The format of the DigitalTwinBuilder public definition.
	Format *string

	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// ItemsClientBeginUpdateDigitalTwinBuilderDefinitionOptions contains the optional parameters for the ItemsClient.BeginUpdateDigitalTwinBuilderDefinition
// method.
type ItemsClientBeginUpdateDigitalTwinBuilderDefinitionOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string

	// Whether to update the item's metadata if it is provided in the .platform file. True - Update the metadata if it is provided
	// in the .platform file as part of the definition, False - Do not update the
	// metadata.
	UpdateMetadata *bool
}

// ItemsClientDeleteDigitalTwinBuilderOptions contains the optional parameters for the ItemsClient.DeleteDigitalTwinBuilder
// method.
type ItemsClientDeleteDigitalTwinBuilderOptions struct {
	// placeholder for future optional parameters
}

// ItemsClientGetDigitalTwinBuilderOptions contains the optional parameters for the ItemsClient.GetDigitalTwinBuilder method.
type ItemsClientGetDigitalTwinBuilderOptions struct {
	// placeholder for future optional parameters
}

// ItemsClientListDigitalTwinBuildersOptions contains the optional parameters for the ItemsClient.NewListDigitalTwinBuildersPager
// method.
type ItemsClientListDigitalTwinBuildersOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// ItemsClientUpdateDigitalTwinBuilderOptions contains the optional parameters for the ItemsClient.UpdateDigitalTwinBuilder
// method.
type ItemsClientUpdateDigitalTwinBuilderOptions struct {
	// placeholder for future optional parameters
}
