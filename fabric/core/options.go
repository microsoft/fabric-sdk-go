// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package core

// CapacitiesClientListCapacitiesOptions contains the optional parameters for the CapacitiesClient.NewListCapacitiesPager
// method.
type CapacitiesClientListCapacitiesOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// ConnectionsClientAddConnectionRoleAssignmentOptions contains the optional parameters for the ConnectionsClient.AddConnectionRoleAssignment
// method.
type ConnectionsClientAddConnectionRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// ConnectionsClientCreateConnectionOptions contains the optional parameters for the ConnectionsClient.CreateConnection method.
type ConnectionsClientCreateConnectionOptions struct {
	// placeholder for future optional parameters
}

// ConnectionsClientDeleteConnectionOptions contains the optional parameters for the ConnectionsClient.DeleteConnection method.
type ConnectionsClientDeleteConnectionOptions struct {
	// placeholder for future optional parameters
}

// ConnectionsClientDeleteConnectionRoleAssignmentOptions contains the optional parameters for the ConnectionsClient.DeleteConnectionRoleAssignment
// method.
type ConnectionsClientDeleteConnectionRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// ConnectionsClientGetConnectionOptions contains the optional parameters for the ConnectionsClient.GetConnection method.
type ConnectionsClientGetConnectionOptions struct {
	// placeholder for future optional parameters
}

// ConnectionsClientGetConnectionRoleAssignmentOptions contains the optional parameters for the ConnectionsClient.GetConnectionRoleAssignment
// method.
type ConnectionsClientGetConnectionRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// ConnectionsClientListConnectionRoleAssignmentsOptions contains the optional parameters for the ConnectionsClient.NewListConnectionRoleAssignmentsPager
// method.
type ConnectionsClientListConnectionRoleAssignmentsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// ConnectionsClientListConnectionsOptions contains the optional parameters for the ConnectionsClient.NewListConnectionsPager
// method.
type ConnectionsClientListConnectionsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// ConnectionsClientListSupportedConnectionTypesOptions contains the optional parameters for the ConnectionsClient.NewListSupportedConnectionTypesPager
// method.
type ConnectionsClientListSupportedConnectionTypesOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string

	// The gateway to list supported connection types. If omitted, the API lists supported connection types in the cloud.
	GatewayID *string

	// Setting that controls whether to show all creation methods. True - Show all creation methods, False - Show only recommended
	// creation methods.
	ShowAllCreationMethods *bool
}

// ConnectionsClientUpdateConnectionOptions contains the optional parameters for the ConnectionsClient.UpdateConnection method.
type ConnectionsClientUpdateConnectionOptions struct {
	// placeholder for future optional parameters
}

// ConnectionsClientUpdateConnectionRoleAssignmentOptions contains the optional parameters for the ConnectionsClient.UpdateConnectionRoleAssignment
// method.
type ConnectionsClientUpdateConnectionRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// DeploymentPipelinesClientBeginDeployStageContentOptions contains the optional parameters for the DeploymentPipelinesClient.BeginDeployStageContent
// method.
type DeploymentPipelinesClientBeginDeployStageContentOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// DeploymentPipelinesClientGetDeploymentPipelineOptions contains the optional parameters for the DeploymentPipelinesClient.GetDeploymentPipeline
// method.
type DeploymentPipelinesClientGetDeploymentPipelineOptions struct {
	// placeholder for future optional parameters
}

// DeploymentPipelinesClientListDeploymentPipelineStageItemsOptions contains the optional parameters for the DeploymentPipelinesClient.NewListDeploymentPipelineStageItemsPager
// method.
type DeploymentPipelinesClientListDeploymentPipelineStageItemsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// DeploymentPipelinesClientListDeploymentPipelineStagesOptions contains the optional parameters for the DeploymentPipelinesClient.NewListDeploymentPipelineStagesPager
// method.
type DeploymentPipelinesClientListDeploymentPipelineStagesOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// DeploymentPipelinesClientListDeploymentPipelinesOptions contains the optional parameters for the DeploymentPipelinesClient.NewListDeploymentPipelinesPager
// method.
type DeploymentPipelinesClientListDeploymentPipelinesOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// ExternalDataSharesClientCreateExternalDataShareOptions contains the optional parameters for the ExternalDataSharesClient.CreateExternalDataShare
// method.
type ExternalDataSharesClientCreateExternalDataShareOptions struct {
	// placeholder for future optional parameters
}

// ExternalDataSharesClientGetExternalDataShareOptions contains the optional parameters for the ExternalDataSharesClient.GetExternalDataShare
// method.
type ExternalDataSharesClientGetExternalDataShareOptions struct {
	// placeholder for future optional parameters
}

// ExternalDataSharesClientListExternalDataSharesInItemOptions contains the optional parameters for the ExternalDataSharesClient.NewListExternalDataSharesInItemPager
// method.
type ExternalDataSharesClientListExternalDataSharesInItemOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// ExternalDataSharesClientRevokeExternalDataShareOptions contains the optional parameters for the ExternalDataSharesClient.RevokeExternalDataShare
// method.
type ExternalDataSharesClientRevokeExternalDataShareOptions struct {
	// placeholder for future optional parameters
}

// GatewaysClientAddGatewayRoleAssignmentOptions contains the optional parameters for the GatewaysClient.AddGatewayRoleAssignment
// method.
type GatewaysClientAddGatewayRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// GatewaysClientCreateGatewayOptions contains the optional parameters for the GatewaysClient.CreateGateway method.
type GatewaysClientCreateGatewayOptions struct {
	// placeholder for future optional parameters
}

// GatewaysClientDeleteGatewayMemberOptions contains the optional parameters for the GatewaysClient.DeleteGatewayMember method.
type GatewaysClientDeleteGatewayMemberOptions struct {
	// placeholder for future optional parameters
}

// GatewaysClientDeleteGatewayOptions contains the optional parameters for the GatewaysClient.DeleteGateway method.
type GatewaysClientDeleteGatewayOptions struct {
	// placeholder for future optional parameters
}

// GatewaysClientDeleteGatewayRoleAssignmentOptions contains the optional parameters for the GatewaysClient.DeleteGatewayRoleAssignment
// method.
type GatewaysClientDeleteGatewayRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// GatewaysClientGetGatewayOptions contains the optional parameters for the GatewaysClient.GetGateway method.
type GatewaysClientGetGatewayOptions struct {
	// placeholder for future optional parameters
}

// GatewaysClientGetGatewayRoleAssignmentOptions contains the optional parameters for the GatewaysClient.GetGatewayRoleAssignment
// method.
type GatewaysClientGetGatewayRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// GatewaysClientListGatewayMembersOptions contains the optional parameters for the GatewaysClient.ListGatewayMembers method.
type GatewaysClientListGatewayMembersOptions struct {
	// placeholder for future optional parameters
}

// GatewaysClientListGatewayRoleAssignmentsOptions contains the optional parameters for the GatewaysClient.NewListGatewayRoleAssignmentsPager
// method.
type GatewaysClientListGatewayRoleAssignmentsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// GatewaysClientListGatewaysOptions contains the optional parameters for the GatewaysClient.NewListGatewaysPager method.
type GatewaysClientListGatewaysOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// GatewaysClientUpdateGatewayMemberOptions contains the optional parameters for the GatewaysClient.UpdateGatewayMember method.
type GatewaysClientUpdateGatewayMemberOptions struct {
	// placeholder for future optional parameters
}

// GatewaysClientUpdateGatewayOptions contains the optional parameters for the GatewaysClient.UpdateGateway method.
type GatewaysClientUpdateGatewayOptions struct {
	// placeholder for future optional parameters
}

// GatewaysClientUpdateGatewayRoleAssignmentOptions contains the optional parameters for the GatewaysClient.UpdateGatewayRoleAssignment
// method.
type GatewaysClientUpdateGatewayRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// GitClientBeginCommitToGitOptions contains the optional parameters for the GitClient.BeginCommitToGit method.
type GitClientBeginCommitToGitOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// GitClientBeginGetStatusOptions contains the optional parameters for the GitClient.BeginGetStatus method.
type GitClientBeginGetStatusOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// GitClientBeginInitializeConnectionOptions contains the optional parameters for the GitClient.BeginInitializeConnection
// method.
type GitClientBeginInitializeConnectionOptions struct {
	// Initialize the connection request payload.
	GitInitializeConnectionRequest *InitializeGitConnectionRequest

	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// GitClientBeginUpdateFromGitOptions contains the optional parameters for the GitClient.BeginUpdateFromGit method.
type GitClientBeginUpdateFromGitOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// GitClientConnectOptions contains the optional parameters for the GitClient.Connect method.
type GitClientConnectOptions struct {
	// placeholder for future optional parameters
}

// GitClientDisconnectOptions contains the optional parameters for the GitClient.Disconnect method.
type GitClientDisconnectOptions struct {
	// placeholder for future optional parameters
}

// GitClientGetConnectionOptions contains the optional parameters for the GitClient.GetConnection method.
type GitClientGetConnectionOptions struct {
	// placeholder for future optional parameters
}

// GitClientGetMyGitCredentialsOptions contains the optional parameters for the GitClient.GetMyGitCredentials method.
type GitClientGetMyGitCredentialsOptions struct {
	// placeholder for future optional parameters
}

// GitClientUpdateMyGitCredentialsOptions contains the optional parameters for the GitClient.UpdateMyGitCredentials method.
type GitClientUpdateMyGitCredentialsOptions struct {
	// placeholder for future optional parameters
}

// ItemsClientBeginCreateItemOptions contains the optional parameters for the ItemsClient.BeginCreateItem method.
type ItemsClientBeginCreateItemOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// ItemsClientBeginGetItemDefinitionOptions contains the optional parameters for the ItemsClient.BeginGetItemDefinition method.
type ItemsClientBeginGetItemDefinitionOptions struct {
	// The format of the item definition.
	Format *string

	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// ItemsClientBeginUpdateItemDefinitionOptions contains the optional parameters for the ItemsClient.BeginUpdateItemDefinition
// method.
type ItemsClientBeginUpdateItemDefinitionOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string

	// When set to true and the .platform file is provided as part of the definition, the item's metadata is updated using the
	// metadata in the .platform file
	UpdateMetadata *bool
}

// ItemsClientDeleteItemOptions contains the optional parameters for the ItemsClient.DeleteItem method.
type ItemsClientDeleteItemOptions struct {
	// placeholder for future optional parameters
}

// ItemsClientGetItemOptions contains the optional parameters for the ItemsClient.GetItem method.
type ItemsClientGetItemOptions struct {
	// placeholder for future optional parameters
}

// ItemsClientListItemConnectionsOptions contains the optional parameters for the ItemsClient.NewListItemConnectionsPager
// method.
type ItemsClientListItemConnectionsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// ItemsClientListItemsOptions contains the optional parameters for the ItemsClient.NewListItemsPager method.
type ItemsClientListItemsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string

	// The item's type.
	Type *string
}

// ItemsClientUpdateItemOptions contains the optional parameters for the ItemsClient.UpdateItem method.
type ItemsClientUpdateItemOptions struct {
	// placeholder for future optional parameters
}

// JobSchedulerClientCancelItemJobInstanceOptions contains the optional parameters for the JobSchedulerClient.CancelItemJobInstance
// method.
type JobSchedulerClientCancelItemJobInstanceOptions struct {
	// placeholder for future optional parameters
}

// JobSchedulerClientCreateItemScheduleOptions contains the optional parameters for the JobSchedulerClient.CreateItemSchedule
// method.
type JobSchedulerClientCreateItemScheduleOptions struct {
	// placeholder for future optional parameters
}

// JobSchedulerClientGetItemJobInstanceOptions contains the optional parameters for the JobSchedulerClient.GetItemJobInstance
// method.
type JobSchedulerClientGetItemJobInstanceOptions struct {
	// placeholder for future optional parameters
}

// JobSchedulerClientGetItemScheduleOptions contains the optional parameters for the JobSchedulerClient.GetItemSchedule method.
type JobSchedulerClientGetItemScheduleOptions struct {
	// placeholder for future optional parameters
}

// JobSchedulerClientListItemJobInstancesOptions contains the optional parameters for the JobSchedulerClient.NewListItemJobInstancesPager
// method.
type JobSchedulerClientListItemJobInstancesOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// JobSchedulerClientListItemSchedulesOptions contains the optional parameters for the JobSchedulerClient.NewListItemSchedulesPager
// method.
type JobSchedulerClientListItemSchedulesOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// JobSchedulerClientRunOnDemandItemJobOptions contains the optional parameters for the JobSchedulerClient.RunOnDemandItemJob
// method.
type JobSchedulerClientRunOnDemandItemJobOptions struct {
	// Run on-demand item job request payload.
	RunOnDemandItemJobRequest *RunOnDemandItemJobRequest
}

// JobSchedulerClientUpdateItemScheduleOptions contains the optional parameters for the JobSchedulerClient.UpdateItemSchedule
// method.
type JobSchedulerClientUpdateItemScheduleOptions struct {
	// placeholder for future optional parameters
}

// LongRunningOperationsClientGetOperationResultOptions contains the optional parameters for the LongRunningOperationsClient.GetOperationResult
// method.
type LongRunningOperationsClientGetOperationResultOptions struct {
	// placeholder for future optional parameters
}

// LongRunningOperationsClientGetOperationStateOptions contains the optional parameters for the LongRunningOperationsClient.GetOperationState
// method.
type LongRunningOperationsClientGetOperationStateOptions struct {
	// placeholder for future optional parameters
}

// ManagedPrivateEndpointsClientCreateWorkspaceManagedPrivateEndpointOptions contains the optional parameters for the ManagedPrivateEndpointsClient.CreateWorkspaceManagedPrivateEndpoint
// method.
type ManagedPrivateEndpointsClientCreateWorkspaceManagedPrivateEndpointOptions struct {
	// placeholder for future optional parameters
}

// ManagedPrivateEndpointsClientDeleteWorkspaceManagedPrivateEndpointOptions contains the optional parameters for the ManagedPrivateEndpointsClient.DeleteWorkspaceManagedPrivateEndpoint
// method.
type ManagedPrivateEndpointsClientDeleteWorkspaceManagedPrivateEndpointOptions struct {
	// placeholder for future optional parameters
}

// ManagedPrivateEndpointsClientGetWorkspaceManagedPrivateEndpointOptions contains the optional parameters for the ManagedPrivateEndpointsClient.GetWorkspaceManagedPrivateEndpoint
// method.
type ManagedPrivateEndpointsClientGetWorkspaceManagedPrivateEndpointOptions struct {
	// placeholder for future optional parameters
}

// ManagedPrivateEndpointsClientListWorkspaceManagedPrivateEndpointsOptions contains the optional parameters for the ManagedPrivateEndpointsClient.NewListWorkspaceManagedPrivateEndpointsPager
// method.
type ManagedPrivateEndpointsClientListWorkspaceManagedPrivateEndpointsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// OneLakeDataAccessSecurityClientCreateOrUpdateDataAccessRolesOptions contains the optional parameters for the OneLakeDataAccessSecurityClient.CreateOrUpdateDataAccessRoles
// method.
type OneLakeDataAccessSecurityClientCreateOrUpdateDataAccessRolesOptions struct {
	// Used to trigger a dry run of the API call. True - The API call will trigger a dry run and no roles will be changed. False
	// - Will not trigger a dry run and roles will be updated.
	DryRun *bool

	// An ETag value. The ETag must be specified in quotes. If provided, the call will succeed only if the resource's ETag matches
	// the provided ETag.
	IfMatch *string

	// An ETag value. The ETag must be specified in quotes. If provided, the call will succeed only if the resource's ETag doesn't
	// match the provided ETag.
	IfNoneMatch *string
}

// OneLakeDataAccessSecurityClientListDataAccessRolesOptions contains the optional parameters for the OneLakeDataAccessSecurityClient.ListDataAccessRoles
// method.
type OneLakeDataAccessSecurityClientListDataAccessRolesOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// OneLakeShortcutsClientBeginResetShortcutCacheOptions contains the optional parameters for the OneLakeShortcutsClient.BeginResetShortcutCache
// method.
type OneLakeShortcutsClientBeginResetShortcutCacheOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// OneLakeShortcutsClientCreateShortcutOptions contains the optional parameters for the OneLakeShortcutsClient.CreateShortcut
// method.
type OneLakeShortcutsClientCreateShortcutOptions struct {
	// When provided, it defines the action to take when a shortcut with the same name and path already exists. The default action
	// is 'Abort'. Additional ShortcutConflictPolicy types may be added over time.
	ShortcutConflictPolicy *ShortcutConflictPolicy
}

// OneLakeShortcutsClientDeleteShortcutOptions contains the optional parameters for the OneLakeShortcutsClient.DeleteShortcut
// method.
type OneLakeShortcutsClientDeleteShortcutOptions struct {
	// placeholder for future optional parameters
}

// OneLakeShortcutsClientGetShortcutOptions contains the optional parameters for the OneLakeShortcutsClient.GetShortcut method.
type OneLakeShortcutsClientGetShortcutOptions struct {
	// placeholder for future optional parameters
}

// OneLakeShortcutsClientListShortcutsOptions contains the optional parameters for the OneLakeShortcutsClient.NewListShortcutsPager
// method.
type OneLakeShortcutsClientListShortcutsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string

	// The starting path from which to retrieve the shortcuts
	ParentPath *string
}

// WorkspacesClientAddWorkspaceRoleAssignmentOptions contains the optional parameters for the WorkspacesClient.AddWorkspaceRoleAssignment
// method.
type WorkspacesClientAddWorkspaceRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientAssignToCapacityOptions contains the optional parameters for the WorkspacesClient.AssignToCapacity method.
type WorkspacesClientAssignToCapacityOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientBeginDeprovisionIdentityOptions contains the optional parameters for the WorkspacesClient.BeginDeprovisionIdentity
// method.
type WorkspacesClientBeginDeprovisionIdentityOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// WorkspacesClientBeginProvisionIdentityOptions contains the optional parameters for the WorkspacesClient.BeginProvisionIdentity
// method.
type WorkspacesClientBeginProvisionIdentityOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// WorkspacesClientCreateWorkspaceOptions contains the optional parameters for the WorkspacesClient.CreateWorkspace method.
type WorkspacesClientCreateWorkspaceOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientDeleteWorkspaceOptions contains the optional parameters for the WorkspacesClient.DeleteWorkspace method.
type WorkspacesClientDeleteWorkspaceOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientDeleteWorkspaceRoleAssignmentOptions contains the optional parameters for the WorkspacesClient.DeleteWorkspaceRoleAssignment
// method.
type WorkspacesClientDeleteWorkspaceRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientGetWorkspaceOptions contains the optional parameters for the WorkspacesClient.GetWorkspace method.
type WorkspacesClientGetWorkspaceOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientGetWorkspaceRoleAssignmentOptions contains the optional parameters for the WorkspacesClient.GetWorkspaceRoleAssignment
// method.
type WorkspacesClientGetWorkspaceRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientListWorkspaceRoleAssignmentsOptions contains the optional parameters for the WorkspacesClient.NewListWorkspaceRoleAssignmentsPager
// method.
type WorkspacesClientListWorkspaceRoleAssignmentsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// WorkspacesClientListWorkspacesOptions contains the optional parameters for the WorkspacesClient.NewListWorkspacesPager
// method.
type WorkspacesClientListWorkspacesOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string

	// A list of roles [/power-bi/collaborate-share/service-roles-new-workspaces#workspace-roles]. Separate values using a comma.
	// If not provided, all workspaces are returned.
	Roles *string
}

// WorkspacesClientUnassignFromCapacityOptions contains the optional parameters for the WorkspacesClient.UnassignFromCapacity
// method.
type WorkspacesClientUnassignFromCapacityOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientUpdateWorkspaceOptions contains the optional parameters for the WorkspacesClient.UpdateWorkspace method.
type WorkspacesClientUpdateWorkspaceOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientUpdateWorkspaceRoleAssignmentOptions contains the optional parameters for the WorkspacesClient.UpdateWorkspaceRoleAssignment
// method.
type WorkspacesClientUpdateWorkspaceRoleAssignmentOptions struct {
	// placeholder for future optional parameters
}
