// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package admin

// DomainsClientAssignDomainWorkspacesByIDsOptions contains the optional parameters for the DomainsClient.AssignDomainWorkspacesByIDs
// method.
type DomainsClientAssignDomainWorkspacesByIDsOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientBeginAssignDomainWorkspacesByCapacitiesOptions contains the optional parameters for the DomainsClient.BeginAssignDomainWorkspacesByCapacities
// method.
type DomainsClientBeginAssignDomainWorkspacesByCapacitiesOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// DomainsClientBeginAssignDomainWorkspacesByPrincipalsOptions contains the optional parameters for the DomainsClient.BeginAssignDomainWorkspacesByPrincipals
// method.
type DomainsClientBeginAssignDomainWorkspacesByPrincipalsOptions struct {
	// Resumes the long-running operation from the provided token.
	ResumeToken string
}

// DomainsClientCreateDomainOptions contains the optional parameters for the DomainsClient.CreateDomain method.
type DomainsClientCreateDomainOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientDeleteDomainOptions contains the optional parameters for the DomainsClient.DeleteDomain method.
type DomainsClientDeleteDomainOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientGetDomainOptions contains the optional parameters for the DomainsClient.GetDomain method.
type DomainsClientGetDomainOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientListDomainWorkspacesOptions contains the optional parameters for the DomainsClient.NewListDomainWorkspacesPager
// method.
type DomainsClientListDomainWorkspacesOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// DomainsClientListDomainsOptions contains the optional parameters for the DomainsClient.ListDomains method.
type DomainsClientListDomainsOptions struct {
	// When true, only return domains that have at least one workspace containing an item. Default: false.
	NonEmptyOnly *bool
}

// DomainsClientRoleAssignmentsBulkAssignOptions contains the optional parameters for the DomainsClient.RoleAssignmentsBulkAssign
// method.
type DomainsClientRoleAssignmentsBulkAssignOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientRoleAssignmentsBulkUnassignOptions contains the optional parameters for the DomainsClient.RoleAssignmentsBulkUnassign
// method.
type DomainsClientRoleAssignmentsBulkUnassignOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientUnassignAllDomainWorkspacesOptions contains the optional parameters for the DomainsClient.UnassignAllDomainWorkspaces
// method.
type DomainsClientUnassignAllDomainWorkspacesOptions struct {
	// placeholder for future optional parameters
}

// DomainsClientUnassignDomainWorkspacesByIDsOptions contains the optional parameters for the DomainsClient.UnassignDomainWorkspacesByIDs
// method.
type DomainsClientUnassignDomainWorkspacesByIDsOptions struct {
	// The request payload for unassigning workspaces from the domain by workspace ID.
	UnassignDomainWorkspacesByIDsRequest *UnassignDomainWorkspacesByIDsRequest
}

// DomainsClientUpdateDomainOptions contains the optional parameters for the DomainsClient.UpdateDomain method.
type DomainsClientUpdateDomainOptions struct {
	// placeholder for future optional parameters
}

// ExternalDataSharesClientListExternalDataSharesOptions contains the optional parameters for the ExternalDataSharesClient.NewListExternalDataSharesPager
// method.
type ExternalDataSharesClientListExternalDataSharesOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// ExternalDataSharesClientRevokeExternalDataShareOptions contains the optional parameters for the ExternalDataSharesClient.RevokeExternalDataShare
// method.
type ExternalDataSharesClientRevokeExternalDataShareOptions struct {
	// placeholder for future optional parameters
}

// ItemsClientGetItemOptions contains the optional parameters for the ItemsClient.GetItem method.
type ItemsClientGetItemOptions struct {
	// The type of the item. When querying for the following types, this parameter is required:
	// * Report
	//
	//
	// * Dashboard
	//
	//
	// * SemanticModel
	//
	//
	// * App
	//
	//
	// * Dataflow
	Type *string
}

// ItemsClientListItemAccessDetailsOptions contains the optional parameters for the ItemsClient.ListItemAccessDetails method.
type ItemsClientListItemAccessDetailsOptions struct {
	// The type of the item. When querying for the following types, this parameter is required:
	// * Report
	//
	//
	// * Dashboard
	//
	//
	// * SemanticModel
	//
	//
	// * App
	//
	//
	// * Dataflow
	Type *string
}

// ItemsClientListItemsOptions contains the optional parameters for the ItemsClient.NewListItemsPager method.
type ItemsClientListItemsOptions struct {
	// The capacity ID of the workspace.
	CapacityID *string

	// Continuous token used to get the next page items.
	ContinuationToken *string

	// The item state. Supported states are active.
	State *string

	// The item type.
	Type *string

	// The workspace ID.
	WorkspaceID *string
}

// LabelsClientBulkRemoveLabelsOptions contains the optional parameters for the LabelsClient.BulkRemoveLabels method.
type LabelsClientBulkRemoveLabelsOptions struct {
	// placeholder for future optional parameters
}

// LabelsClientBulkSetLabelsOptions contains the optional parameters for the LabelsClient.BulkSetLabels method.
type LabelsClientBulkSetLabelsOptions struct {
	// placeholder for future optional parameters
}

// TenantsClientListCapacitiesTenantSettingsOverridesOptions contains the optional parameters for the TenantsClient.NewListCapacitiesTenantSettingsOverridesPager
// method.
type TenantsClientListCapacitiesTenantSettingsOverridesOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// TenantsClientListTenantSettingsOptions contains the optional parameters for the TenantsClient.ListTenantSettings method.
type TenantsClientListTenantSettingsOptions struct {
	// placeholder for future optional parameters
}

// UsersClientListAccessEntitiesOptions contains the optional parameters for the UsersClient.NewListAccessEntitiesPager method.
type UsersClientListAccessEntitiesOptions struct {
	// Continuous token used to get the next page items.
	ContinuationToken *string

	// The item type.
	Type *string
}

// WorkspacesClientGetWorkspaceOptions contains the optional parameters for the WorkspacesClient.GetWorkspace method.
type WorkspacesClientGetWorkspaceOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientListGitConnectionsOptions contains the optional parameters for the WorkspacesClient.NewListGitConnectionsPager
// method.
type WorkspacesClientListGitConnectionsOptions struct {
	// A token for retrieving the next page of results.
	ContinuationToken *string
}

// WorkspacesClientListWorkspaceAccessDetailsOptions contains the optional parameters for the WorkspacesClient.ListWorkspaceAccessDetails
// method.
type WorkspacesClientListWorkspaceAccessDetailsOptions struct {
	// placeholder for future optional parameters
}

// WorkspacesClientListWorkspacesOptions contains the optional parameters for the WorkspacesClient.NewListWorkspacesPager
// method.
type WorkspacesClientListWorkspacesOptions struct {
	// The capacity ID of the workspace.
	CapacityID *string

	// Continuation token. Used to get the next items in the list.
	ContinuationToken *string

	// The workspace name.
	Name *string

	// The workspace state. Supported states are active and deleted.
	State *string

	// The workspace type. Supported types are personal, workspace, adminworkspace.
	Type *string
}

// WorkspacesClientRestoreWorkspaceOptions contains the optional parameters for the WorkspacesClient.RestoreWorkspace method.
type WorkspacesClientRestoreWorkspaceOptions struct {
	// placeholder for future optional parameters
}
