// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.
// SPDX-License-Identifier: MIT

package admin

import (
	"github.com/Azure/azure-sdk-for-go/sdk/azcore"

	"github.com/microsoft/fabric-sdk-go/fabric"
	"github.com/microsoft/fabric-sdk-go/internal/iruntime"
)

// ClientFactory is a client factory used to create any client in this module.
// Don't use this type directly, use NewClientFactory instead.
type ClientFactory struct {
	internal *azcore.Client
	endpoint string
}

// NewClientFactory creates a new instance of ClientFactory with the specified values.
// The parameter values will be propagated to any client created from this factory.
//   - credential - used to authorize requests. Usually a credential from azidentity.
//   - endpoint - pass nil to accept the default values.
//   - options - pass nil to accept the default values.
func NewClientFactory(credential azcore.TokenCredential, endpoint *string, options *azcore.ClientOptions) (*ClientFactory, error) {
	sc, err := iruntime.NewServiceClient(credential, fabric.Version, endpoint, options)
	if err != nil {
		return nil, err
	}

	return &ClientFactory{
		internal: sc.Internal,
		endpoint: sc.Endpoint,
	}, nil
}

// NewClientFactoryWithClient creates a new instance of ClientFactory with sharable Client.
// The Client will be propagated to any client created from this factory.
//   - client - Client created in the containing module: github.com/microsoft/fabric-sdk-go/fabric
func NewClientFactoryWithClient(client fabric.Client) *ClientFactory {
	return &ClientFactory{
		internal: client.Internal,
		endpoint: client.Endpoint,
	}
}

// NewDomainsClient creates a new instance of DomainsClient.
func (c *ClientFactory) NewDomainsClient() *DomainsClient {
	return &DomainsClient{
		internal: c.internal.WithClientName("admin.DomainsClient"),
		endpoint: c.endpoint,
	}
}

// NewExternalDataSharesClient creates a new instance of ExternalDataSharesClient.
func (c *ClientFactory) NewExternalDataSharesClient() *ExternalDataSharesClient {
	return &ExternalDataSharesClient{
		internal: c.internal.WithClientName("admin.ExternalDataSharesClient"),
		endpoint: c.endpoint,
	}
}

// NewItemsClient creates a new instance of ItemsClient.
func (c *ClientFactory) NewItemsClient() *ItemsClient {
	return &ItemsClient{
		internal: c.internal.WithClientName("admin.ItemsClient"),
		endpoint: c.endpoint,
	}
}

// NewLabelsClient creates a new instance of LabelsClient.
func (c *ClientFactory) NewLabelsClient() *LabelsClient {
	return &LabelsClient{
		internal: c.internal.WithClientName("admin.LabelsClient"),
		endpoint: c.endpoint,
	}
}

// NewTagsClient creates a new instance of TagsClient.
func (c *ClientFactory) NewTagsClient() *TagsClient {
	return &TagsClient{
		internal: c.internal.WithClientName("admin.TagsClient"),
		endpoint: c.endpoint,
	}
}

// NewTenantsClient creates a new instance of TenantsClient.
func (c *ClientFactory) NewTenantsClient() *TenantsClient {
	return &TenantsClient{
		internal: c.internal.WithClientName("admin.TenantsClient"),
		endpoint: c.endpoint,
	}
}

// NewUsersClient creates a new instance of UsersClient.
func (c *ClientFactory) NewUsersClient() *UsersClient {
	return &UsersClient{
		internal: c.internal.WithClientName("admin.UsersClient"),
		endpoint: c.endpoint,
	}
}

// NewWorkspacesClient creates a new instance of WorkspacesClient.
func (c *ClientFactory) NewWorkspacesClient() *WorkspacesClient {
	return &WorkspacesClient{
		internal: c.internal.WithClientName("admin.WorkspacesClient"),
		endpoint: c.endpoint,
	}
}
